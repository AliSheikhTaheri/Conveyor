<?xml version="1.0"?>
<doc>
    <assembly>
        <name>uComponents.Legacy</name>
    </assembly>
    <members>
        <member name="T:uComponents.DataTypes.AutoComplete.AutoCompleteDataEditorUpdatePanel">
            <summary>
            this is the original version of the AutoComplete control, it's replacement (AutoCompleteDataEditor) will be JS and won't use an UpdatePanel
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompleteDataEditorUpdatePanel.#ctor(umbraco.interfaces.IData,uComponents.DataTypes.AutoComplete.AutoCompleteOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.AutoComplete.AutoCompleteDataEditorUpdatePanel"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompleteDataEditorUpdatePanel.BuildSeletedItemsDelete">
            <summary>
            builds the list of selected item controls, each with a delete button
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.AutoComplete.AutoCompleteDataType">
            <summary>
            The AutoComplete data-type for Umbraco.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.preValueEditor">
            <summary>
            The Prevalue Editor for the data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.dataEditor">
            <summary>
            The Data Editor for the data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.data">
            <summary>
            The Data for the data-type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.DataTypeName">
            <summary>
            Gets the name of the data-type.
            </summary>
            <value>The name of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance, this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.AutoComplete.AutoCompleteOptions">
            <summary>
            Configuration options for AutoComplete
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompleteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.AutoComplete.AutoCompleteOptions"/> class.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteOptions.TypeToPick">
            <summary>
            Gets or sets the type to pick.
            </summary>
            <value>The type to pick.</value>
            <remarks>The type of object to pick. The default is Document</remarks>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompleteOptions.XPath">
            <summary>
            Gets or sets the XPath expression.
            </summary>
            <value>The XPath expression.</value>
            <remarks>Default to "descendant::*"</remarks>
        </member>
        <member name="T:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor">
            <summary>
            Pre value editor for the AutoComplete data type
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.typeToPickRadioButtonList">
            <summary>
            Radio buttons to select type of node to pick from: Content / Media / Members
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.xPathTextBox">
            <summary>
            XPath statement to select nodes from which a selection may be made
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.xPathRequiredFieldValidator">
            <summary>
            Validator to ensure an XPath statement has been populated
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.autoCompleteOptions">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            Sets the values of the controls
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control output
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
            <remarks>Lazy load the options data object that represents the current state of this datatypes configuration</remarks>
        </member>
        <member name="P:uComponents.DataTypes.AutoComplete.AutoCompletePreValueEditor.TypeToPick">
            <summary>
            Gets the type to pick.
            </summary>
            <value>The type to pick.</value>
            <remarks>Returns the object type picked in the radio button list</remarks>
        </member>
        <member name="T:uComponents.DataTypes.ImageDropdown.ID_DataEditor">
            <summary>
            The DataEditor for the ImageDropdown data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.ImageDropdown.ID_DataEditor.m_DropDownList">
            <summary>
            The DropDownList control.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.ImageDropdown.ID_DataEditor.m_HiddenValue">
            <summary>
            The HiddenField control.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataEditor.Store">
            <summary>
            Stores this instance.
            </summary>
            <remarks>
            NOTE: Added for compatibility with DTG [azzlack]
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataEditor.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataEditor.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataEditor.CreateChildControls">
            <summary>
            Creates the child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override render to control the exact output of what is rendered this includes instantiating the jquery plugin
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataEditor.IsValid">
            <summary>
            Gets the value of IsValid.
            </summary>
            <value>Returns 'Valid' if valid, otherwise an empty string.</value>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataEditor.Options">
            <summary>
            Gets or sets the PreValue options.
            </summary>
            <value>The PreValue options.</value>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataEditor.PickedValue">
            <summary>
            Gets or sets the picked value.
            </summary>
            <value>The picked value.</value>
        </member>
        <member name="T:uComponents.DataTypes.ImageDropdown.ID_DataType">
            <summary>
            The ImageDropdown data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.ImageDropdown.ID_DataType.m_ImageDropDown">
            <summary>
            The internal control to render
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.ImageDropdown.ID_DataType.m_PreValues">
            <summary>
            Internal pre value editor to render
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.ImageDropdown.ID_DataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataType.m_ImageDropDown_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the m_ImageDropDown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.ImageDropdown.ID_DataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Handle the saving event, need to give data to Umbraco
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.ImageDropdown.ID_DataType.PrevalueEditor">
            <summary>
            Returns the PrevalueEditor.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.JsonDropdown.JD_Control">
            <summary>
            The control for the JSON DropDown data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Control.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Control.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Control.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Control.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns>Returns the data.</returns>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Control.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Control.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text value.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Control.TextBoxControl">
            <summary>
            Gets or sets the CheckBox control.
            </summary>
            <value>The CheckBox control.</value>
        </member>
        <member name="T:uComponents.DataTypes.JsonDropdown.JD_DataType">
            <summary>
            The ImageDropdown data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_DataType.m_Control">
            <summary>
            The CheckToggle control.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_DataType.m_PreValueEditor">
            <summary>
            The PreValue Editor for the data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_DataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.JsonDropdown.JD_DataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_DataType.m_Control_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the m_Placeholder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_DataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Saves the editor control value.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_DataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_DataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_DataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.JsonDropdown.JD_Options">
            <summary>
            The options for the JsonDropDown data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Options.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.JsonDropdown.JD_Options"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [loads defaults].</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_Options.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.JsonDropdown.JD_Options"/> class.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Options.UrlToJson">
            <summary>
            Gets or sets the background-color for the 'off' state.
            </summary>
            <value>The background-color for the 'off' state.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Options.Expression">
            <summary>
            Gets or sets the label text for the 'Jquery Expression' state.
            </summary>
            <value>The label text for the 'jquery expression' state.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Options.Value">
            <summary>
            Gets or sets the key to retrieve and set to the dropdownlist value.
            </summary>
            <value>The label text for the 'value' of the option in dropdown list.</value>
        </member>
        <member name="P:uComponents.DataTypes.JsonDropdown.JD_Options.Key">
            <summary>
            Gets or sets the key to retrieve and set to the dropdownlist key.
            </summary>
            <value>The label text for the 'key' of the option in dropdown list.</value>
        </member>
        <member name="T:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor">
            <summary>
            The PreValue Editor for the JSON DropDown data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.UrlTextBox">
            <summary>
            TextBox control for the URL.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.ExpressionTextBox">
            <summary>
            TextBox control for the expression.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.KeyTextBox">
            <summary>
            TextBox control for the key.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.ValueTextbox">
            <summary>
            TextBox control for the value.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.Save">
            <summary>
            Saves the data-type PreValue options.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.JsonDropdown.JD_PrevalueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions">
            <summary>
            BaseTree extensions for MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.SetNullTreeRootNode(umbraco.cms.presentation.Trees.BaseTree,System.Int32,umbraco.cms.presentation.Trees.XmlTreeNode@,System.String)">
            <summary>
            Determines if it needs to render a null tree based on the start node id and returns true if it is the case. 
            </summary>
            <param name="tree"></param>
            <param name="startNodeId"></param>
            <param name="rootNode"></param>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetStartNodeId(umbraco.cms.presentation.Trees.BaseTree,umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.Content)">
            <summary>
            Used to determine the start node id while taking into account a user's security
            </summary>
            <param name="tree"></param>
            <param name="definedStartNode"></param>
            <param name="userStartNode"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetDataTypeId(umbraco.cms.presentation.Trees.BaseTree)">
            <summary>
            Returns the data type id for the current base tree
            </summary>
            <remarks>
            The data type definition id is persisted between request as a query string.
            This is used to retreive values from the cookie which are easier persisted values
            than trying to append everything to custom query strings.
            </remarks>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetXPathFromCookie(umbraco.cms.presentation.Trees.BaseTree,System.Int32)">
            <summary>
            return the xpath statement stored in the cookie for this control id
            </summary>
            <param name="tree"></param>
            <param name="dataTypeDefId"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetXPathFilterTypeFromCookie(umbraco.cms.presentation.Trees.BaseTree,System.Int32)">
            <summary>
            Returns the xpath filter from the cookie for the current data type
            </summary>
            <param name="tree"></param>
            <param name="dataTypeDefId"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetPersistedCookieValue``1(umbraco.cms.presentation.Trees.BaseTree,System.Func{System.Web.HttpCookie,``0},``0)">
            <summary>
            Helper method to return the persisted cookied value for the tree
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tree"></param>
            <param name="output"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.BaseTreeExtensions.GetTreeServiceUrlWithParams(umbraco.cms.presentation.Trees.BaseTree,System.Int32,System.Int32)">
            <summary>
            This will return the normal service url based on id but will also ensure that the data type definition id is passed through as the nodeKey param
            </summary>
            <param name="tree">The tree.</param>
            <param name="id">The id.</param>
            <param name="dataTypeDefId">The data type def id.</param>
            <returns></returns>
            <remarks>
            We only need to set the custom source to pass in our extra NodeKey data.
            By default the system will use one or the other: Id or NodeKey, in this case
            we are sort of 'tricking' the system and we require both.
            Umbraco allows you to theoretically pass in any source as long as it meets the standard
            which means you can pass around any arbitrary data to your trees in the form of a query string,
            though it's just a bit convoluted to do so.
            </remarks>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree">
            <summary>
            FilteredContentTree for the MultiNodeTreePicker
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree"/> class.
            </summary>
            <param name="app">The app.</param>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.m_UserStartNodeDoc">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.m_DefinedStartNodeDoc">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.m_DeterminedStartNodeId">
            <summary>
            The start node id determined by the defined id and by the user's defined id
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.CreateRootNode(umbraco.cms.presentation.Trees.XmlTreeNode@)">
            <summary>
            Creates the root node.
            </summary>
            <param name="rootNode">The root node.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.OnRenderNode(umbraco.cms.presentation.Trees.XmlTreeNode@,umbraco.cms.businesslogic.web.Document)">
            <summary>
            Called when [render node].
            </summary>
            <param name="xNode">The x node.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.UserStartNodeDoc">
            <summary>
            Returns the Document object of the starting node for the current User. This ensures
            that the Document object is only instantiated once.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.DefinedStartNodeDoc">
            <summary>
            Returns the Document object of the starting node that is defined in the prevalue editor. This ensures
            that the Document object is only instantiated once.
            </summary>        
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredContentTree.StartNodeID">
            <summary>
            Determines the allowed start node id based on the users start node id and the 
            defined start node id in the data type.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree">
            <summary>
            FilteredMediaTree for the MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree"/> class.
            </summary>
            <param name="app">The app.</param>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.m_UserStartNodeMedia">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.m_DefinedStartNodeMedia">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.m_DeterminedStartNodeId">
            <summary>
            The start node id determined by the defined id and by the user's defined id
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.CreateRootNode(umbraco.cms.presentation.Trees.XmlTreeNode@)">
            <summary>
            Creates the root node.
            </summary>
            <param name="rootNode">The root node.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.OnBeforeNodeRender(umbraco.cms.presentation.Trees.XmlTree@,umbraco.cms.presentation.Trees.XmlTreeNode@,System.EventArgs)">
            <summary>
            Called when [before node render].
            </summary>
            <param name="sender">The sender.</param>
            <param name="node">The node.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.UserStartNodeDoc">
            <summary>
            Returns the Media object of the starting node for the current User. This ensures
            that the Media object is only instantiated once.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.DefinedStartNodeMedia">
            <summary>
            Returns the Media object of the starting node that is defined in the prevalue editor. This ensures
            that the Media object is only instantiated once.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.FilteredMediaTree.StartNodeID">
            <summary>
            Determines the allowed start node id based on the users start node id and the 
            defined start node id in the data type.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions">
            <summary>
             A helper class to store and retrieve cookie values for the MNTP cookie.
            </summary>
            <remarks>
            The cookie is used to persist values from the client to the server since 
            it is much more complicated to try to persist these values between ajax request, 
            given the tree's current architecture.
            </remarks>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Xpf">
            <summary>
            XPath filter
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Xpft">
            <summary>
            XPath filter type
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Sn">
            <summary>
            Start node
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snxet">
            <summary>
            Start node xpath expression type
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snst">
            <summary>
            Start node select type
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snxe">
            <summary>
            Start node xpath expression
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Ceni">
            <summary>
            Current editing node id
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_MaxItemsAllowed">
            <summary>
              Looks up a localized string similar to The maximum number of items that are allowed to be selected by a content editor. If an unlimited number of node selections should be allowed, then enter -1 as the value.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_MinItemsAllowed">
            <summary>
              Looks up a localized string similar to The minimum number of items that are allowed to be selected by a content editor..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_NodeSelectionType">
            <summary>
              Looks up a localized string similar to Nodes can be selected from a parent node (Node Picker) or by an XPath expression. NOTE: When using an XPath expression, only published nodes can be shown..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_ShowThumbnails">
            <summary>
              Looks up a localized string similar to If enabled and &apos;media&apos; is selected as the tree type then a thumbnail will be rendered for each item selected..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_ShowTooltips">
            <summary>
              Looks up a localized string similar to If enabled will show an information icon next to each node selected. When the icon is clicked, a tooltip is shown displaying the nodes extended properties..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_StartNodeId">
            <summary>
              Looks up a localized string similar to Define the starting node that should be rendered for the picker. This will ensure that the correct security measures are in place by checking the defined start node ID for the user accessing the picker. In some cases, if the user is not able to view the node, then the picker will render an error message..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_StoreAsComma">
            <summary>
              Looks up a localized string similar to You can specify to store the data in Umbraco as comma seperated or as XML. By default it is stored as XML which makes it easier to use the saved value in XSLT, however, storing it as comma seperated makes it easier to work with the data using the API such as Node factory..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_XPathExpression">
            <summary>
              Looks up a localized string similar to This XPath expression is used to select a starting node and depends on the XPath expression type chosen (global or from current). &lt;u&gt;IMPORTANT&lt;/u&gt;: This XPath expression should be written to match &lt;b&gt;ONE&lt;/b&gt; node, if the expression matches more than one node, then the first node matched will be used as the start node..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_XPathExpressionType">
            <summary>
              Looks up a localized string similar to The XPath expression that is evaluated to match a start node can be evaluated at a global tree level, or matched from the current node being edited..
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_XPathFilter">
            <summary>
              Looks up a localized string similar to An xpath filter to match nodes that will be either enabled or disabled from being clicked (depending on what is selected for the XPath filter type). This XPath filter is for one node only so it should be formatted to select only one node. The XML to XPath against is the same as the Umbraco XML for one node.&lt;br/&gt;&lt;br/&gt;Example: &lt;code&gt;/*[self::myNodeType or self::yourNodeType]&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;The above would make all nodes of types: myNodeType or yourNodeType not selectable in the tree.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Desc_XPathFilterType">
            <summary>
              Looks up a localized string similar to Should the XPath filter match nodes to enable nodes or disable nodes. If Enable is selected, this means that only nodes that match the XPath filter will be allowed to be selected in the tree picker and vise versa for Disabled.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_NodeSelectionType_Picker">
            <summary>
              Looks up a localized string similar to Node Picker.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_NodeSelectionType_XPath">
            <summary>
              Looks up a localized string similar to XPath Expression.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_XPathExpressionType_CurrentNode">
            <summary>
              Looks up a localized string similar to From Current.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_XPathExpressionType_Global">
            <summary>
              Looks up a localized string similar to Global.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_XPathMatchType_Disable">
            <summary>
              Looks up a localized string similar to Disable.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Item_XPathMatchType_Enable">
            <summary>
              Looks up a localized string similar to Enable.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_ControlHeight">
            <summary>
              Looks up a localized string similar to Pixel height of the tree control box.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_MaxItemsAllowed">
            <summary>
              Looks up a localized string similar to Maximum node selections.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_MinItemsAllowed">
            <summary>
              Looks up a localized string similar to Minimum node selections.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_NodeSelectionType">
            <summary>
              Looks up a localized string similar to Node selection type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_SelectTreeType">
            <summary>
              Looks up a localized string similar to Select tree type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_ShowItemInfoTooltipCheckBox">
            <summary>
              Looks up a localized string similar to Show tooltip for selected item.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_ShowThumbnails">
            <summary>
              Looks up a localized string similar to Show thumbnails for media items?.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_StartNodeId">
            <summary>
              Looks up a localized string similar to Start node ID.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_StoreAsComma">
            <summary>
              Looks up a localized string similar to Data as CSV or XML? .
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_XPathExpression">
            <summary>
              Looks up a localized string similar to XPath expression.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_XPathExpressionType">
            <summary>
              Looks up a localized string similar to XPath type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_XPathFilter">
            <summary>
              Looks up a localized string similar to XPath filter.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Lbl_XPathFilterType">
            <summary>
              Looks up a localized string similar to XPath filter type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Val_ControlHeightMsg">
            <summary>
              Looks up a localized string similar to Please enter a pixel value between 1 - 999.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Val_MaxItemsMsg">
            <summary>
              Looks up a localized string similar to Please enter only numbers.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Val_MinItemsInvalid">
            <summary>
              Looks up a localized string similar to The highlighted Multi Node Tree Picker property requires a minimum node selection of {0}.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Val_MinItemsMsg">
            <summary>
              Looks up a localized string similar to Please enter only numbers.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTPResources.Val_RelativeXpath">
            <summary>
              Looks up a localized string similar to A relative xpath expression cannot start with &quot;/&quot; or &quot;//&quot;.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor">
            <summary>
            The user interface to display to the content editor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor"/> class.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.m_Locker">
            <summary>
            Used for locking code blocks
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.MinItemsValidator">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.TreePickerControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.SelectedValues">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.PickedValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.RightColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.CreateChildControls">
            <summary>
            Creates the child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.DataBind">
            <summary>
            Ensure the repeater is data bound
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.SelectedValues_ItemDataBound(System.Object,System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            Event handler for the selected node repeater. 
            This will fill in all of the text values, icons, etc.. for nodes based on their ID.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.OnPreRender(System.EventArgs)">
            <summary>
            set the nodekey to the id of this datatype
            </summary>
            <remarks>
            this is how get the xpath out of the cookie to know how the tree knows how to filter things.
            generally the nodekey is used for a string id, but we'll use it for something different.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override render to control the exact output of what is rendered this includes instantiating the jquery plugin
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
            <remarks>
            Generally i don't like to do this but there's a few div's, etc... to render so this makes more sense.
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.ConvertToXDocument(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            converts a list of Ids to the XDocument structure
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.RenderTooltip(System.Web.UI.HtmlTextWriter)">
            <summary>
            this will render the tooltip object on the page so long as another 
            one hasn't already been registered. There should only be one tooltip.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.SavePersistentValuesForTree(System.String)">
            <summary>
            This will update the multi-node tree picker data which is used to store
            the xpath data and xpath match type for this control id.
            </summary>
            <param name="xpath">The xpath.</param>
            <remarks>
            This will save the data into a cookie and also into the request cookie. It must save
            it to both locations in case the request cookie has been changed and the request cookie
            is different than the response cookie.
            </remarks>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.IconPath">
            <summary>
            A reference path to where the icons are actually stored as compared to where the tree themes folder is
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.SelectedIds">
            <summary>
            gets/sets the value based on an array of IDs selected
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.XmlValue">
            <summary>
            get/set the value for the selected nodes in xml format
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.PropertyName">
            <summary>
            The property name being edited with the current data editor. This is used for the min items validation statement.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.TreeToRender">
            <summary>
            The tree type alias to render
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.XPathFilter">
            <summary>
             An xpath filter to match nodes that will be disabled from being clicked
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.MinNodeCount">
            <summary>
            The minimum amount of nodes that can be selected
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.MaxNodeCount">
            <summary>
            The maximum amount of nodes that can be selected
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.StartNodeId">
            <summary>
            The start node id
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.StartNodeSelectionType">
            <summary>
            The start node selection type
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.StartNodeXPathExpressionType">
            <summary>
            The xpath expression type to select the start node when the StartNodeSelectionType is XPath
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.StartNodeXPathExpression">
            <summary>
            The XPath expression to use to determine the start node when the StartNodeSelectionType is XPath
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.ShowToolTips">
            <summary>
            Gets or sets a value indicating whether [show tool tips].
            </summary>
            <value><c>true</c> if [show tool tips]; otherwise, <c>false</c>.</value>
            <remarks>Shows/Hides the tooltip info bubble.</remarks>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.XPathFilterMatchType">
            <summary>
            The XPathFilterType to match
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.ShowThumbnailsForMedia">
            <summary>
            Gets or sets a value indicating whether [show thumbnails for media].
            </summary>
            <value>
            	<c>true</c> if [show thumbnails for media]; otherwise, <c>false</c>.
            </value>
            <remarks>Whether or not to show thumbnails for media</remarks>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.MediaTypesWithThumbnails">
            <summary>
            A list of media type names that can have thumbnails (i.e. 'image')
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.DataTypeDefinitionId">
            <summary>
            This is set by the data type and allows us to save a cookie value
            for persistence for the data type.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataEditor.ControlHeight">
            <summary>
            The height of the tree control box in pixels
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType">
            <summary>
            Multi-node tree picker data type
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType"/> class.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.m_Tree">
            <summary>
            The internal tree picker control to render
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.m_PreValues">
            <summary>
            Internal pre value editor to render
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.Tree_Init(System.Object,System.EventArgs)">
            <summary>
            Initialize the tree, here's where we can set some initial properties for the tree
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.Tree_Load(System.Object,System.EventArgs)">
            <summary>
            Set the data source for the editor
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Handle the saving event, need to give data to Umbraco
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.ClearCookiePersistence">
            <summary>
            Helper method to ensure the pesistence cookie is cleared.
            This is used on app startup and after editing the pre-value editor
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.Id">
            <summary>
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.DataTypeName">
            <summary>
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.Data">
            <summary>
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.StoreAsCommaDelimited">
            <summary>
            Value indicating whether to store as comma seperated or Xml
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_DataType.PrevalueEditor">
            <summary>
            return a custom pre value editor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor">
            <summary>
            The pre-value editor for the multi node tree picker.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeightTextBox">
            <summary>
            The control height text box
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeSelectionTypeRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartContentNodeIdPicker">
            <summary>
            The start node id content picker
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartMediaNodeIdPicker">
            <summary>
            The start node id media picker
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionTypeRadioButtons">
            <summary>
            XPath expression type radio button list
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowThumbnailsForMediaCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.TreeTypeDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.MaxItemsTextBox">
            <summary>
            Text box for maximum amount of items
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.MinItemsTextBox">
            <summary>
            Text box for minimum amount of items
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.NumbersMinItemsValidator">
            <summary>
            Minimum items validator
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.RelativeXpathValidator">
            <summary>
            Validator for validating relative xpath expressions
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.NumbersMaxItemsValidator">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeightValidatator">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowItemInfoTooltipCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StoreAsCommaDelimitedRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterTypeRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Override on init to ensure child controls
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Ensures the css to render this control is included.
            Binds the saved value to the drop down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.AddPreValueRow(System.String,System.String,System.Web.UI.Control[])">
            <summary>
            Helper method to add a server side pre value row
            </summary>
            <param name="lbl"></param>
            <param name="description"></param>
            <param name="ctl"></param>
            <remarks>
            Using server side syntax because of the post backs and because i don't want to manage the view state manually
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.OnPreRender(System.EventArgs)">
            <summary>
            Hides/Shows controls based on the selection of other controls
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            render our own custom markup
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.GetPreValues">
            <summary>
            Lazy loads the prevalues for this data type
            </summary>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.Save">
            <summary>
            Saves data to Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.SavePreValue(uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex,System.String,System.Collections.SortedList)">
            <summary>
            Helper method to save/create pre value values in the db
            </summary>
            <param name="propIndex"></param>
            <param name="value"></param>
            <param name="currentVals"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.GetPreValue``1(uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex,System.Func{umbraco.cms.businesslogic.datatype.PreValue,``0},``0)">
            <summary>
             Generic method to return a strongly typed object from the pre value bucket
            </summary>
            <param name="index"></param>
            <param name="output"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.SelectedTreeType">
            <summary>
            The chosen tree type to render
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilter">
            <summary>
            An xpath filter to disable nodes to be selectable
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.MaxNodeCount">
            <summary>
            The number of nodes this picker will support picking
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.MinNodeCount">
            <summary>
            The minimum number of nodes this picker will support picking
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowToolTip">
            <summary>
            A boolean value indicating whether or not to show the informational tool tips 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StoreAsCommaDelimited">
            <summary>
            Value to check if the data should be stored as CSV or XML
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpression">
            <summary>
            The XPath expression used when the node type selection is Xpath
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionType">
            <summary>
            The type of xpath expression used for the xpathexpressiontext if using an xpath node selection
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeSelectionType">
            <summary>
            The type of selection type to use for the start node
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterMatchType">
            <summary>
            The type of xpath filter applied
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeId">
            <summary>
            The start node id used when the node selection is a picker
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowThumbnailsForMedia">
            <summary>
            A boolean value indicating whether or not to show the thumbnails for media 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeight">
            <summary>
             Returns the control height in pixels
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.Editor">
            <summary>
             returns this as it's own editor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex">
            <summary>
            Used to determine the index number of where the property is saved in the pre values repository
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerExtensions">
            <summary>
            Extension methods for this namespace
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerExtensions.AddAllMNTPClientDependencies(System.Web.UI.Control)">
            <summary>
            Adds the JS/CSS required for the MultiNodeTreePicker
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerExtensions.AddCssMNTPClientDependencies(System.Web.UI.Control)">
            <summary>
            Adds the CSS required for the MultiNodeTreePicker
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerExtensions.AddJsMNTPClientDependencies(System.Web.UI.Control)">
            <summary>
            Adds the JS required for the MultiNodeTreePicker
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerModelBinder">
            <summary>
            Model binder for the DataTypeGrid data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.MultiNodeTreePickerModelBinder.Init(System.Int32,System.String,System.Object@)">
            <summary>
            Inits the specified current node id.
            </summary>
            <param name="CurrentNodeId">The current node id.</param>
            <param name="PropertyData">The property data.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.NodeSelectionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.NodeSelectionType.Picker">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.NodeSelectionType.XPathExpression">
            <summary>
            
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.SelectedItemsTemplate">
            <summary>
            The item template for the selected items repeater
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.SelectedItemsTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Creates the template for the repeater item
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.XmlTreeNodeExtensions">
            <summary>
            XmlTreeNode extensions for the MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiNodeTreePicker.XmlTreeNodeExtensions.DetermineClickable(umbraco.cms.presentation.Trees.XmlTreeNode,System.String,uComponents.DataTypes.MultiNodeTreePicker.XPathFilterType,System.Xml.Linq.XElement)">
            <summary>
            Determines if the node should be clickable based on the xpath given
            </summary>
            <param name="node">The node.</param>
            <param name="xpath">The xpath.</param>
            <param name="type">The type.</param>
            <param name="xml">The XML.</param>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.XPathExpressionType">
            <summary>
            An enumerator for the XPath expression.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.XPathExpressionType.Global">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.XPathExpressionType.FromCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiNodeTreePicker.XPathFilterType">
            <summary>
            An enumerator for the XPath filter, for either enable/disable.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.XPathFilterType.Disable">
            <summary>
            Disables the XPath filter.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiNodeTreePicker.XPathFilterType.Enable">
            <summary>
            Enables the XPath filter.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor">
            <summary>
            Renders a CheckBoxList using with option nodes obtained by an XPath expression
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.data">
            <summary>
            value stored by a datatype instance
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.options">
            <summary>
            configuration options for this datatype, as defined by the PreValueEditor
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.statusLiteral">
            <summary>
            Literal used to render status (Enabled || Disabled)
            this datatype is only enabled and active if it can find the property alias on the current node (as defined in PreValueEditor) and 
            the relation type parent object type (or child if reverse index used) matches the object type of the current node which this datatype is on
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.#ctor(umbraco.interfaces.IData,uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions)">
            <summary>
            Initializes a new instance of MultiPickerRelationsDataEditor
            </summary>
            <param name="data">data stored by this instance of this datatype (not currently used)</param>
            <param name="options">configuration options for this datatype as set by the PreValueEditor</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.CreateChildControls">
            <summary>
            Creates the child controls
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node, this datatype doens't do anythign here, but with an event handler instead,
            as needs to know the saved values of a sibling multiNodePickerProperty
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.GetMappingDetails">
            <summary>
            returns a string "Property '[propertyAlias]' with RelationType '[relationTypeName]"
            </summary>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.GetPickerUmbracoObjectType(umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            returns the UmbracoObjectType associated as defined by the supplied relation type, and if reverse indexing has been enabled
            </summary>
            <param name="relationType">associated RealationType</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.IsContextUmbracoObjectTypeValid(umbraco.uQuery.UmbracoObjectType,umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            Check to see if the content id side of the relation type is valid (doesn't check the node picker id side)
            </summary>
            <param name="contextUmbracoObjectType">Type of the content object (content/ media or member)</param>
            <param name="relationType">Type of the relation.</param>
            <returns>
            	<c>true</c> if [is content object type valid] [the specified content object type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether this is an RTE - this Property expected by Umbraco
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether the label should be shown when editing - this Property exected by Umbraco
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.Editor">
            <summary>
            Gets the DataEditor - Property expected by Umbraco
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.CurrentContentId">
            <summary>
            Gets the id of the current (content || media || member) node on which this datatype is a property
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataEditor.CurrentContextObjectType">
            <summary>
            Gets the UmbracoObjectType on which this datatype is a property of
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType">
            <summary>
            This datatype will render a CheckBoxList where the options are defined by an XPath expression,
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.preValueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.dataEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance,
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler">
            <summary>
            Event handler that will convert a CSV into Relations
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.OnApplicationInitialized(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application initialized].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.OnApplicationStarted(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application started].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.OnApplicationStarting(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application starting].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
            <remarks>
            Initializes a new instance of MultiPickerRelationsEventHandler, hooks into the after event of saving a Content node, Media item or a Member.
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.AfterSave(umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.SaveEventArgs)">
            <summary>
            Event after all properties have been saved
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.BeforeDelete(umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.DeleteEventArgs)">
            <summary>
            Clears any existing relations when deleting a node with a MultiPickerRelations datatype
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:umbraco.cms.businesslogic.DeleteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.DeleteRelations(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Boolean,System.String)">
            <summary>
            Delete all relations using the content node for a given RelationType
            </summary>
            <param name="relationType"></param>
            <param name="contentNodeId"></param>
            <param name="reverseIndexing"></param>
            <param name="instanceIdentifier">NOT USED ATM</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsEventHandler.CreateRelation(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="relationType"></param>
            <param name="contentNodeId">id sourced from the Content / Media / Member</param>
            <param name="pickerNodeId">id sourced from the MultiPicker</param>
            <param name="reverseIndexing">if true, reverses the parentId and child Id</param>
            <param name="instanceIdentifier">JSON string with id of MultiPicker Relations property instance</param>
        </member>
        <member name="T:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions">
            <summary>
            Data Class, used to store the configuration options for the MultiPickerRelationsPreValueEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions.#ctor">
            <summary>
            Initializes an instance of MultiPickerRelationsOptions
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions.PropertyAlias">
            <summary>
            Alias of the multiNodePickerProperty to get a csv value of IDs from //TODO: a known format for xml fragments would be good too
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions.RelationTypeId">
            <summary>
            The Id of the RelationType to use 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions.ReverseIndexing">
            <summary>
            only relevant with parent-child 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsOptions.HideDataEditor">
            <summary>
            if true then the property is hidden
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor">
            <summary>
            This PreValueEditor will require an XPath expression to define the nodes to pick as CheckBox options,
            TODO: [HR] min / max selections ?
            Uses the shared JsonPreValueEditor as nice way of lightweight serializing a config data class object into a single DB field
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.multiPickerPropertyAliasPicker">
            <summary>
            Prepopulated Umbraco Propery Picker, lists all aliases (could refine this by asking for the context in which this relation wire-up will
            be used, and then only listing the aliases for that context)
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.multiPickerPropertyAliasRequiredFieldValidator">
            <summary>
            RequiredFieldValidator for the ProperyAliasPicker
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.relationTypeDropDownList">
            <summary>
            drop down list of all relation types
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.relationTypeRequiredFieldValidator">
            <summary>
            RequiredFieldValidator for the RelationType DropDownList
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.reverseIndexingCheckBox">
            <summary>
            If a parent to child relation type is selected, then this checkbox will indicate the direction to use,
            with reverse indexing the parents are the nodes selected via the multi-picker, and the nodeID on which the
            this datatype is used, become the child nodes
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.hideDataEditorCheckBox">
            <summary>
            if selected, then the property on the data editor is hidden (it's only used as a label)
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.relationType">
            <summary>
            Currently selected RelationType
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of MultiPickerRelationsPreValueEditor
            </summary>
            <param name="dataType">MultiPickerRelationsDataType</param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.OnPreRender(System.EventArgs)">
            <summary>
            Used to remove styling from the built in multiNodePickerProperty alias picker DropDownList 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.Options">
            <summary>
            Lazy load the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.MultiPickerRelations.MultiPickerRelationsPreValueEditor.RelationType">
            <summary>
            Lazy load currently selected RelationType
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl">
            <summary>
            The MultipleTextstring control sets a character limit on a TextBox.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.CssResourcePath">
            <summary>
            Embedded resource path for the CSS stylesheet.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.JavaScriptResourcePath">
            <summary>
            Embedded resource path for the JavaScript file.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.values">
            <summary>
            Field for the list of values.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.SelectedValues">
            <summary>
            The HiddenField to store the selected values.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.IsValid">
            <summary>
            Gets the value of IsValid.
            </summary>
            <value>Returns 'Valid' if valid, otherwise an empty string.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringControl.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType">
            <summary>
            Data Editor for the Multiple Textstring data type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.m_Control">
            <summary>
            The control for the Multiple Textstring data-editor.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.m_Data">
            <summary>
            The Data object for the data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.m_PreValueEditor">
            <summary>
            The PreValue Editor for the data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.m_Control_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Saves the data for the editor control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.Data">
            <summary>
            Gets the data for the data-type.
            </summary>
            <value>The data for the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringModelBinder">
            <summary>
            Model binder for the Multiple Textstring data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringModelBinder.Init(System.Int32,System.String,System.Object@)">
            <summary>
            Inits the specified current node id.
            </summary>
            <param name="CurrentNodeId">The current node id.</param>
            <param name="PropertyData">The property data.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions">
            <summary>
            The options for the Multiple Textstring data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [load defaults].</param>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:uComponents.DataTypes.MultipleTextstring.MultipleTextstringOptions.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor">
            <summary>
            The PreValue Editor for the Multiple Textstring data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.TextBoxMaximum">
            <summary>
            The TextBox control for the maximum value of the control.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.TextBoxMinimum">
            <summary>
            The TextBox control for the minimum value of the control.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.MultipleTextstring.MultipleTextstringPrevalueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="T:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor">
            <summary>
            The user interface to display to the content editor
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.SelectedValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.CreateChildControls">
            <summary>
            Creates the child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override render to control the exact output of what is rendered this includes instantiating the jquery plugin
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.m_prevalues">
            <summary>
            Gets or sets the m_prevalues.
            </summary>
            <value>The m_prevalues.</value>
        </member>
        <member name="P:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataEditor.PickedValues">
            <summary>
            Gets or sets the picked values.
            </summary>
            <value>The picked values.</value>
        </member>
        <member name="T:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType">
            <summary>
            The RadiobuttonListWithImages data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.m_RadioBoxList">
            <summary>
            The internal control to render
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.m_PreValueEditor">
            <summary>
            Internal pre value editor to render
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.#ctor">
            <summary>
            Constructor, setup data editor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.m_RadioBoxList_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the m_RadioBoxList control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Handle the saving event, need to give data to Umbraco
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.RadiobuttonListWithImages.RLWI_DataType.PrevalueEditor">
            <summary>
            return a custom pre value editor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.RelatedLinksWithMedia.PagePickerwMediaDataExtractor">
            <summary>
            Allows for the extraction of the link ID for the selected node of the
            PagePicker (aka content picker) class for integration of the PagePicker
            in another datatype.
            This class replaces the database linkup that normally holds the data and
            stores the data locally in memory and allows for easy access to the
            data (after the IDataEditor has performed a save()).
            This class was not designed for, but might work equally well for other datatypes.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaData">
            <summary>
            Data for the RelatedLinksWithMedia data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaData"/> class.
            </summary>
            <param name="DataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaData.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Converts the data to Xml.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor">
            <summary>
            The DataEdtior for the RelatedLinksWithMedia data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._data">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._configuration">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._listboxLinks">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonEdit">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._textboxLinkTitle">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._checkNewWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._textBoxExtUrl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonAddExtUrl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonAddIntUrlCP">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonAddMediaCP">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonEditExtUrl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonEditIntUrlCP">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._buttonEditMediaCP">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._xml">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._pagePicker">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._pagePickerExtractor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._mediaChooser">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor._mediaChooserExtractor">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.#ctor(umbraco.interfaces.IData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor"/> class.
            </summary>
            <param name="Data">The data.</param>
            <param name="Configuration">The configuration.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.Save">
            <summary>
            Saves this instance.
            </summary>
            <remarks>
            Creates and saves a xml format of the content of the _listboxLinks
            We could adapt the global xml at every adjustment, but this implementation is easier
            (and possibly more efficient).
            </remarks>
            <example>
            	<links>
            	   <link type="external" title="google" link="http://google.com" newwindow="1" />
            	   <link type="internal" title="home" link="1234" newwindow="0" />
            	</links>
            </example>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate"/> property is being defined when the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer"/> property has already been created.
            </exception>
            <remarks>
            Draws the controls, only gets called for the first drawing of the page, not for each postback
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.GetTextWithDefault(System.String,System.String,System.String)">
            <summary>
            Gets the text with default.
            </summary>
            <param name="area">The area.</param>
            <param name="key">The key.</param>
            <param name="defaultText">The default text.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.createBaseXmlDocument">
            <summary>
            Creates the base XML document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonUp_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonUp control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonDown_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonDown control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonDel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonDel control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonAddExt_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAddExt control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonAddIntCP_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAddIntCP control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonAddMediaCP_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonAddMediaCP control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonEditExt_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonEditExt control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonEditIntCP_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonEditIntCP control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.buttonEditMediaCP_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonEditMediaCP control.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="ea">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.resetInputMedia">
            <summary>
            Resets the input media.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType">
            <summary>
            The RelatedLinksWithMedia data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType._Editor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType._baseData">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType._prevalueeditor">
            <summary>
            
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType.DataEditor">
            <summary>
            Gets the data editor.
            </summary>
            <value>The data editor.</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaPrevalueEditor">
            <summary>
            The PreValue Editor for the Related Links with Media data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.RelatedLinksWithMedia.RelatedLinkswMediaPrevalueEditor.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="T:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor">
            <summary>
            The pre-value editor for the RadiobuttonList node tree picker.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.m_DataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.m_Locker">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.UploadControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.TextControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.UploadRegEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Override on init to ensure child controls
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Ensures the css to render this control is included.
            Binds the saved value to the drop down.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            render our own custom markup
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.Delete(System.String)">
            <summary>
            Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.Prevalues">
            <summary>
            Gets the prevalues.
            </summary>
            <value>The prevalues.</value>
        </member>
        <member name="P:uComponents.DataTypes.Shared.PrevalueEditors.MultiImageUpload_PrevalueEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.Shared.PrevalueEditors.ImageAndAlias">
            <summary>
            The Image and Alias object.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.Shared.PrevalueEditors.ImageAndAlias.Alias">
            <summary>
            Gets or sets the alias.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:uComponents.DataTypes.Shared.PrevalueEditors.ImageAndAlias.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="T:uComponents.DataTypes.Slider.SliderControl">
            <summary>
            The jQuery UI Slider control.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderControl.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderControl.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderControl.Options">
            <summary>
            Gets or sets the slider options.
            </summary>
            <value>The slider options.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderControl.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderControl.TextBoxControl">
            <summary>
            Gets or sets the TextBox control that contains the value(s) of the slider.
            </summary>
            <value>The text box control.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderControl.DivSliderControl">
            <summary>
            Gets or sets the HtmlGenericControl control for the slider &lt;div&gt; tag.
            </summary>
            <value>The div slider control.</value>
        </member>
        <member name="T:uComponents.DataTypes.Slider.SliderDataType">
            <summary>
            A jQuery UI Slider data-type for Umbraco.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderDataType.m_Control">
            <summary>
            The SliderControl.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderDataType.m_PreValueEditor">
            <summary>
            The PreValue Editor for the data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderDataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.Slider.SliderDataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderDataType.m_Control_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the m_Placeholder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderDataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Saves the editor control value.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderDataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.Slider.SliderOptions">
            <summary>
            The options for the Slider data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.Slider.SliderOptions"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.Slider.SliderOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [loads defaults].</param>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.EnableRange">
            <summary>
            Gets or sets a value indicating whether [enable range].
            </summary>
            <value><c>true</c> if [enable range]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.EnableStep">
            <summary>
            Gets or sets a value indicating whether [enable step].
            </summary>
            <value><c>true</c> if [enable step]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.RangeValue">
            <summary>
            Gets or sets the range value.
            </summary>
            <value>The range value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.StepValue">
            <summary>
            Gets or sets the step.
            </summary>
            <value>The step.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.Value2">
            <summary>
            Gets or sets the second value.
            </summary>
            <value>The second value.</value>
        </member>
        <member name="P:uComponents.DataTypes.Slider.SliderOptions.DBType">
            <summary>
            Gets or sets the Database Storage Type 
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.Slider.SliderPrevalueEditor">
            <summary>
            The PreValue Editor for the Slider data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.DatabaseDataType">
            <summary>
            The DropDownList for the database data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.EnableRange">
            <summary>
            The CheckBox control to enable the range for the slider.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.EnableStep">
            <summary>
            The CheckBox control to enable incremental steps for the slider.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.MinValue">
            <summary>
            The TextBox control for the minimum value of the slider.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.MaxValue">
            <summary>
            The TextBox control for the maximum value of the slider.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.Orientation">
            <summary>
            The DropDownList control for the orientation of the slider.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.RangeValue">
            <summary>
            The DropDownList control for the range value.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.StepValue">
            <summary>
            The TextBox control for the incremental step value.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.Value">
            <summary>
            The TextBox control for the first value input.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.Slider.SliderPrevalueEditor.Value2">
            <summary>
            The TextBox control for the second value input.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.Slider.SliderPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.Save">
            <summary>
            Saves the data-type PreValue options.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:uComponents.DataTypes.Slider.SliderPrevalueEditor.ToggleFields">
            <summary>
            Toggles the fields.
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor">
            <summary>
            The DataEditor for the StyledTextBox stat-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor._data">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.#ctor(umbraco.interfaces.IData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType">
            <summary>
            Data Type for the Styled TextBox
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType._editor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType._baseData">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType._prevalueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType.DataEditor">
            <summary>
            Gets the data editor.
            </summary>
            <value>The data editor.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor">
            <summary>
            The PreValue Editor for the Styled TextBox data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.DEFAULT_WIDTH">
            <summary>
            The default width of the textbox.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.DEFAULT_STYLE">
            <summary>
            The default style of the textbox.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.m_DataType">
            <summary>
            The underlying base data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.m_Locker">
            <summary>
            An object to temporarily lock writing to the database.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.SetPreviewTextbox">
            <summary>
            Sets the preview textbox.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.WidthTextBox">
            <summary>
            Gets or sets the width text box.
            </summary>
            <value>The width text box.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.StyleTextBox">
            <summary>
            Gets or sets the style text box.
            </summary>
            <value>The style text box.</value>
        </member>
        <member name="P:uComponents.DataTypes.StyledTextBox.StyledTextBoxPrevalueEditor.PreviewTextBox">
            <summary>
            Gets or sets the preview text box.
            </summary>
            <value>The preview text box.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.HorizontalAlignment">
            <summary>
              Horizontal Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.HorizontalAlignment.Left">
            <summary>
              Left Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.HorizontalAlignment.Center">
            <summary>
              Center Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.HorizontalAlignment.Right">
            <summary>
              Right Alignment
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.VerticalAlignment">
            <summary>
              Vertical Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.VerticalAlignment.Top">
            <summary>
              Top Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.VerticalAlignment.Center">
            <summary>
              Center Alignment
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.VerticalAlignment.Bottom">
            <summary>
              Bottom Alignment
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.DocumentHandlers">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.OnApplicationInitialized(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application initialized].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.OnApplicationStarted(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application started].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.OnApplicationStarting(Umbraco.Core.UmbracoApplicationBase,Umbraco.Core.ApplicationContext)">
            <summary>
            Called when [application starting].
            </summary>
            <param name="httpApplication">The HTTP application.</param>
            <param name="applicationContext">The application context.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.Document_BeforeDelete(umbraco.cms.businesslogic.web.Document,umbraco.cms.businesslogic.DeleteEventArgs)">
            <summary>
              Document_s the before delete.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:umbraco.cms.businesslogic.DeleteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.Document_BeforePublish(umbraco.cms.businesslogic.web.Document,umbraco.cms.businesslogic.PublishEventArgs)">
            <summary>
            Document_s the before publish.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:umbraco.cms.businesslogic.PublishEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.DocumentHandlers.GetParameters(System.String,umbraco.cms.businesslogic.datatype.DataTypeDefinition)">
            <summary>
              Gets the parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.Fonts">
            <summary>
              Gets the fonts.
            </summary>
            <value>The fonts.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.FontStyles">
            <summary>
              Gets the font styles.
            </summary>
            <value>The font styles.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.Colors">
            <summary>
              Gets the colors.
            </summary>
            <value>The font colors.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.HAlignments">
            <summary>
              Gets the Horizontal alignments.
            </summary>
            <value>The H alignments.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.VAlignments">
            <summary>
              Gets the Vertical alignments.
            </summary>
            <value>The V alignments.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.DropDownItems.OutputFormats">
            <summary>
              Gets the image formats.
            </summary>
            <value>The image formats.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.DropShadow">
            <summary>
              Drop Shadow
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.DropShadow.None">
            <summary>
              None
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.DropShadow.TopLeft">
            <summary>
              Top-Left
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.DropShadow.TopRight">
            <summary>
              Top-Right
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.DropShadow.BottomLeft">
            <summary>
              Bottom-Left
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.DropShadow.BottomRight">
            <summary>
              Bottom-Right
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.Helper">
            <summary>
              Helper Class
              Wraps frequently used functionality from Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.CreateImageMedia(System.Int32,System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
              Creates an image media.
            </summary>
            <param name = "parentFolderId">The parent folder id.</param>
            <param name = "mediaName">Name of the media.</param>
            <param name = "image">The image.</param>
            <param name = "imageFormat">The image format.</param>
            <returns>Media Url</returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.UpdateImageMedia(System.Int32,System.Drawing.Image)">
            <summary>
              Updates the image media.
            </summary>
            <param name = "mediaId">The media id.</param>
            <param name = "image">The image.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.GetMediaUrl(System.Int32)">
            <summary>
              Gets the media URL.
            </summary>
            <param name = "mediaId">The media id.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.GetUrl(System.Xml.XPath.XPathNavigator)">
            <summary>
              for media node get url by traversing the data node
            </summary>
            <param name = "currentNavigator">The current navigator.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.GetDefaultExtension(System.Drawing.Imaging.ImageFormat)">
            <summary>
              Gets the default extension.
            </summary>
            <param name = "imageFormat">The image format.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.Helper.LegalizeString(System.String)">
            <summary>
              Legalizes the string.
            </summary>
            <param name = "text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.Helper.CurrentNode">
            <summary>
              Gets the current node.
            </summary>
            <value>The current node.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.ImageGenerator">
            <summary>
              Image Generator
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GenerateTextImage(uComponents.DataTypes.TextImage.TextImageParameters)">
            <summary>
              Generates the text image.
            </summary>
            <param name = "parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetFontFamily(uComponents.DataTypes.TextImage.TextImageParameters)">
            <summary>
              Gets the font family.
            </summary>
            <param name = "parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetFontStyle(System.Collections.Generic.IEnumerable{System.Drawing.FontStyle})">
            <summary>
              Gets the font style.
            </summary>
            <param name = "fontStyles">The font styles.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetNewStringFormat(uComponents.DataTypes.TextImage.HorizontalAlignment,uComponents.DataTypes.TextImage.VerticalAlignment)">
            <summary>
              Gets a new string format.
            </summary>
            <param name = "hAlign">The h align.</param>
            <param name = "vAlign">The v align.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetNewBitmap(System.Drawing.SizeF)">
            <summary>
              Gets a new bitmap.
            </summary>
            <param name = "size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetGraphicsWithoutBackground(uComponents.DataTypes.TextImage.TextImageParameters,System.Drawing.Bitmap@,System.Drawing.RectangleF@)">
            <summary>
              Gets the image without background.
            </summary>
            <param name = "parameters">The parameters.</param>
            <param name = "textImage">The text image.</param>
            <param name = "rectF">The rect F.</param>
            <returns></returns>
            Convert.ToFloat
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetGraphicsWithBackground(uComponents.DataTypes.TextImage.TextImageParameters,System.Drawing.Bitmap@,System.Drawing.RectangleF@)">
            <summary>
              Gets the image with background.
            </summary>
            <param name = "parameters">The parameters.</param>
            <param name = "textImage">The text image.</param>
            <param name = "rectF">The rect F.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.DrawDropShadow(System.String,System.Drawing.Graphics,System.Drawing.RectangleF,uComponents.DataTypes.TextImage.DropShadow,System.Drawing.Font,System.String,System.Drawing.StringFormat)">
            <summary>
              Draws the drop shadow.
            </summary>
            <param name = "textString">The text string.</param>
            <param name = "graphics">The graphics.</param>
            <param name = "rectF">The rect F.</param>
            <param name = "dropShadow">The drop shadow.</param>
            <param name = "font">The font.</param>
            <param name = "shadowColor">Color of the shadow.</param>
            <param name = "format">The format.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.ImageGenerator.GetNewFontFamily(System.String)">
            <summary>
              Gets a new font family.
            </summary>
            <param name = "fontName">Name of the font.</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.MediaHelper">
            <summary>
              Helper Class
              Wraps frequently used functionality from Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.SaveTextImage(uComponents.DataTypes.TextImage.TextImageParameters,System.String)">
            <summary>
              Saves the text image.
            </summary>
            <param name = "parameters">The parameters.</param>
            <param name = "imageName">Name of the image.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.ConvertToImageFormat(uComponents.DataTypes.TextImage.OutputFormat)">
            <summary>
              Converts to image format.
            </summary>
            <param name = "outputFormat">The output format.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.CreateImageMedia(System.Int32,System.String,System.Drawing.Image,uComponents.DataTypes.TextImage.OutputFormat)">
            <summary>
              Creates an image media.
            </summary>
            <param name = "parentId">The parent media id.</param>
            <param name = "mediaName">Name of the media.</param>
            <param name = "image">The image.</param>
            <param name = "outputFormat">The output format.</param>
            <returns>Media Url</returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.UpdateImageMedia(System.Int32,System.Drawing.Image)">
            <summary>
              Updates the image media.
            </summary>
            <param name = "mediaId">The media id.</param>
            <param name = "image">The image.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.GetMediaUrl(System.Int32)">
            <summary>
              Gets the media URL.
            </summary>
            <param name = "mediaId">The media id.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.GetUrl(System.Xml.XPath.XPathNavigator)">
            <summary>
              for media node get url by traversing the data node
            </summary>
            <param name = "currentNavigator">The current navigator.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.MediaHelper.LegalizeString(System.String)">
            <summary>
              Legalizes the string.
            </summary>
            <param name = "text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.MediaHelper.CurrentNode">
            <summary>
              Gets the current node.
            </summary>
            <value>The current node.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.OutputFormat">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.OutputFormat.Gif">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.OutputFormat.Jpg">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.OutputFormat.Png">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.OutputFormat.Bmp">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.OutputFormat.Tif">
            <summary>
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageControl">
            <summary>
            Control for TextImage data-type
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageControl.InitializeControl">
            <summary>
              Initializes the control.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageControl.OnInit(System.EventArgs)">
            <summary>
              Raises the <see cref = "E:System.Web.UI.Control.Init" /> event.
            </summary>
            <param name = "e">An <see cref = "T:System.EventArgs" /> object that contains the event data.</param>
            <exception cref = "T:System.InvalidOperationException">The <see cref = "P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref = "P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageControl.Text">
            <summary>
              Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageDataEditor">
            <summary>
              TextImage Control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.DeleteImage">
            <summary>
              Deletes the image.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.SaveImage(uComponents.DataTypes.TextImage.TextImageParameters)">
            <summary>
              Saves the image using the specified parameters
            </summary>
            <param name = "parameters">The parameters.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.DeleteButton_Click(System.Object,System.EventArgs)">
            <summary>
              Handles the Click event of the _deleteButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.OnInit(System.EventArgs)">
            <summary>
              Raises the <see cref = "E:System.Web.UI.Control.Init" /> event.
            </summary>
            <param name = "e">An <see cref = "T:System.EventArgs" /> object that contains the event data.</param>
            <exception cref = "T:System.InvalidOperationException">The <see cref = "P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref = "P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.CreateChildControls">
            <summary>
              Called by the ASP.NET page framework to notify server controls that use
              composition-based implementation to create any child controls they contain
              in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataEditor.TextBoxText_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the _textBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:uComponents.DataTypes.TextImage.TextImageDataEditor.TextChanged">
            <summary>
            Occurs when the text is changed
            </summary>
        </member>
        <member name="E:uComponents.DataTypes.TextImage.TextImageDataEditor.Delete">
            <summary>
              Occurs when the image is deleted.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataEditor.Text">
            <summary>
              Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataEditor.ImageUrl">
            <summary>
              Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataEditor.XmlValue">
            <summary>
              Gets the XML value.
            </summary>
            <value>The XML value.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageDataEditor.TextChangedHandler">
            <summary>
            TextChangedHandler delegate
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageDataEditor.DeleteHandler">
            <summary>
              DeleteHandler delegate
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageDataType">
            <summary>
              DataType from AbstractDataEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:uComponents.DataTypes.TextImage.TextImageDataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.TextImageDataEditor_TextChanged(System.Object,System.EventArgs)">
            <summary>
              Handles the TextChanged event of the TextImageBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.TextImageDataEditor_PreRender(System.Object,System.EventArgs)">
            <summary>
              Handles the PreRender event of the TextImageDataEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.TextImageDataEditor_OnSave(System.EventArgs)">
            <summary>
              Handles the Save event of the TextImageDataEditor control
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.TextDataEditor_Delete(System.Object,System.EventArgs)">
            <summary>
            Handles the Delete event of the TextImageDataEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.GetParameters">
            <summary>
              Gets the parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageDataType.SaveImage">
            <summary>
              Saves the image.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataType.Id">
            <summary>
              Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataType.DataTypeName">
            <summary>
              Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataType.PrevalueEditor">
            <summary>
              Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageDataType.Data">
            <summary>
              Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageExtensions">
            <summary>
            TextImage Extensions
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImageExtensions.ColorpickerJs">
            <summary>
            
            jQuery Color Picker -- http://code.google.com/p/mcolorpicker/
            
            </summary>
            <code>
                control.AddResourceToClientDependency(ColorpickerJs, ClientDependencyType.Javascript);
            </code>
            <remarks>
            Don't forget to add web resources:
            
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.images.color.png", MediaTypeNames.Image.Png)]
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.images.colorpicker.png", MediaTypeNames.Image.Png)]
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.images.graybar.jpg", MediaTypeNames.Image.Jpeg)]
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.image.grid.gif", MediaTypeNames.Image.Gif)]
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.images.meta100.png", MediaTypeNames.Image.Png)]
                [assembly: WebResource("uComponents.Legacy.DataTypes.TextImage.images.transparentpixel.gif", MediaTypeNames.Image.Gif)]
                [assembly: WebResource("uComponents.DataTypes.Shared.Resources.Scripts.mColorPicker.js", MediaTypeNames.Application.JavaScript, PerformSubstitution = true)]
            
            </remarks>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageExtensions.AddJsTextImageClientDependencies(System.Web.UI.Control)">
            <summary>
            Adds the JS required for TextImage
            </summary>
            <param name="control">The CTL.</param>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImageParameters">
            <summary>
              Text Image Parameters
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImageParameters.#ctor(System.String,uComponents.DataTypes.TextImage.OutputFormat,System.String,System.String,System.Int32,System.Drawing.FontStyle[],System.String,System.String,System.String,uComponents.DataTypes.TextImage.HorizontalAlignment,uComponents.DataTypes.TextImage.VerticalAlignment,System.Int32,System.Int32,umbraco.cms.businesslogic.media.Media)">
            <summary>
              Initializes a new instance of the <see cref="T:uComponents.DataTypes.TextImage.TextImageParameters"/> class.
            </summary>
            <param name="textString">The node property.</param>
            <param name="outputFormat">The output format.</param>
            <param name="customFontPath">The custom font path.</param>
            <param name="fontName">Name of the font.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontStyles">The font style.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="backColor">Color of the back.</param>
            <param name="shadowColor">Color of the shadow.</param>
            <param name="hAlign">The h align.</param>
            <param name="vAlign">The v align.</param>
            <param name="canvasHeight">Height of the canvas.</param>
            <param name="canvasWidth">Width of the canvas.</param>
            <param name="backgroundMedia">The background image.</param>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.CustomFontPath">
            <summary>
              Gets the custom font path.
            </summary>
            <value>The custom font path.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.Text">
            <summary>
              Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.FontName">
            <summary>
              Gets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.FontSize">
            <summary>
              Gets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.FontStyles">
            <summary>
              Gets the font style.
            </summary>
            <value>The font style.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.ForeColor">
            <summary>
              Gets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.BackColor">
            <summary>
              Gets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.ShadowColor">
            <summary>
              Gets the color of the shadow.
            </summary>
            <value>The color of the shadow.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.HAlign">
            <summary>
              Gets the H align.
            </summary>
            <value>The H align.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.VAlign">
            <summary>
              Gets the V align.
            </summary>
            <value>The V align.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.CanvasHeight">
            <summary>
              Gets the height of the canvas.
            </summary>
            <value>The height of the canvas.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.CanvasWidth">
            <summary>
              Gets the width of the canvas.
            </summary>
            <value>The width of the canvas.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.BackgroundMedia">
            <summary>
              Gets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImageParameters.OutputFormat">
            <summary>
              Gets the output format.
            </summary>
            <value>The output format.</value>
        </member>
        <member name="T:uComponents.DataTypes.TextImage.TextImagePrevalueEditor">
            <summary>
              TextImagePrevalueEditor
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.BackgroundColorPicker">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.BackgroundMediaChooser">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.CustomFontPathTextBox">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontNameDropDownList">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontSizeTextBox">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontStyleCheckBoxList">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ForegroundColorPicker">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.HorizontalAlignmentDropDownList">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImageFormatDropDownList">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImageHeightTextBox">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImagePreview">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImageWidthTextBox">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ShadowColorPicker">
            <summary>
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.VerticalAlignmentDropDownList">
            <summary>
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
              Initializes a new instance of the <see cref="T:uComponents.DataTypes.TextImage.TextImagePrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.GetPreValue(System.Int32)">
            <summary>
              Gets the pre value.
            </summary>
            <param name = "index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.UpdatePreValue(System.Int32,System.String)">
            <summary>
              Inserts the value.
            </summary>
            <param name = "index">The index.</param>
            <param name = "value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.Save">
            <summary>
              Saves this instance.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.SetErrorMessage(System.Exception)">
            <summary>
              Gets or sets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.OnInit(System.EventArgs)">
            <summary>
              Override on init to ensure child controls
            </summary>
            <param name = "e"></param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.CreateChildControls">
            <summary>
              Called by the ASP.NET page framework to notify server controls that use
              composition-based implementation to create any child controls they contain 
              in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
              Raises the <see cref = "E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name = "e">The <see cref = "T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
              Sends server control content to a provided <see cref = "T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.
            </summary>
            <param name = "writer">The <see cref = "T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontName">
            <summary>
              Gets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.CustomFontPath">
            <summary>
              Gets the custom font path.
            </summary>
            <value>The custom font path.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontSize">
            <summary>
              Gets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.FontStyles">
            <summary>
              Gets the font style.
            </summary>
            <value>The font style.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ForegroundColor">
            <summary>
              Gets the color of the foreground (font color).
            </summary>
            <value>The color of the foreground.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.BackgroundColor">
            <summary>
              Gets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ShadowColor">
            <summary>
              Gets the color of the shadow.
            </summary>
            <value>The color of the shadow.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.HorizontalAlignment">
            <summary>
              Gets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.VerticalAlignment">
            <summary>
              Gets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImageHeight">
            <summary>
              Gets the height of the image.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImageWidth">
            <summary>
              Gets the width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.BackgroundMediaId">
            <summary>
              Gets the background media id.
            </summary>
            <value>The background media id.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.BackgroundMedia">
            <summary>
              Gets the background image.
            </summary>
            <value>The root media id.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.OutputFormat">
            <summary>
              Gets the output format.
            </summary>
            <value>The output format.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.ImagePreviewUrl">
            <summary>
              Gets the sample image URL.
            </summary>
            <value>The sample image URL.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.EditorPreValues">
            <summary>
              Gets the editor pre values.
            </summary>
            <value>The editor pre values.</value>
        </member>
        <member name="P:uComponents.DataTypes.TextImage.TextImagePrevalueEditor.Editor">
            <summary>
              Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor">
            <summary>
            This datatype will render text box however on save it will check if field value is unique 
            by searching all content for same field alias to ensure value has not been set elsewhere good for SEO unique page titles
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.DuplicatelegacyFieldXpath">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.DuplicateXpath">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.EndErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.PageLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor._txtPropertyValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor._validTextBoxValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.QueryXmlDataStoreForProperty">
            <summary>
            Queries the XML data store for property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.ValidPropertyValueServerValidate(System.Object,System.Web.UI.WebControls.ServerValidateEventArgs)">
            <summary>
            Valids the property value server validate.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The <see cref="T:System.Web.UI.WebControls.ServerValidateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyDataEditor.FieldAlias">
            <summary>
            Gets or sets the field alias.
            </summary>
            <value>The field alias.</value>
        </member>
        <member name="T:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType">
            <summary>
            The UniqueProperty data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType._cogUniquePreValueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType._mControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.MControlInit(System.Object,System.EventArgs)">
            <summary>
            Ms the control init.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Datas the editor control_ on save.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor">
            <summary>
            The PreValue Editor for the UniqueProperty data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.m_DataType">
            <summary>
            The underlying base data-type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.m_Locker">
            <summary>
            An object to temporarily lock writing to the database.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.Save">
            <summary>
            Saves the data for this instance of the PreValue Editor.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.SelectedPropertyAlias">
            <summary>
            Gets the selected property alias.
            </summary>
            <value>The selected property alias.</value>
        </member>
        <member name="P:uComponents.DataTypes.UniqueProperty.UniquePropertyPreValueEditor.PropertiesTextBox">
            <summary>
            Gets or sets the properties text box.
            </summary>
            <value>The properties text box.</value>
        </member>
        <member name="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor">
            <summary>
            Renders a CheckBoxList using with option nodes obtained by an XPath expression
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.checkBoxList">
            <summary>
            Field for the checkbox list.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.#ctor(umbraco.interfaces.IData,uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions)">
            <summary>
            Initializes a new instance of XPathCheckBoxListDataEditor
            </summary>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType">
            <summary>
            This datatype will render a CheckBoxList where the options are defined by an XPath expression,
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.preValueEditor">
            <summary>
            Field for the preValueEditor.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.dataEditor">
            <summary>
            Field for the dataEditor.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance, 
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListModelBinder">
            <summary>
            Model binder for the XPathCheckBoxList data-type.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListModelBinder.Init(System.Int32,System.String,System.Object@)">
            <summary>
            Inits the specified current node id.
            </summary>
            <param name="CurrentNodeId">The current node id.</param>
            <param name="PropertyData">The property data.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions">
            <summary>
            Data Class, used to store the configuration options for the XPathCheckBoxListPreValueEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions"/> class.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [load defaults].</param>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions.XPath">
            <summary>
            XPath string used to get Nodes to be used as CheckBox options in a CheckBoxList
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions.UseXml">
            <summary>
            Defaults to true, where the property value will be stored as an Xml Fragment, else if false, a Csv will be stored
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListOptions.UseIds">
            <summary>
            Defaults to true, where property value stored is NodeIds, else if false, then value stored is the Node Names
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor">
            <summary>
            This PreValueEditor will require an XPath expression to define the nodes to pick as CheckBox options,
            TODO: [HR] min / max selections ?
            Uses the shared JsonPreValueEditor as nice way of lightweight serializing a config data class object into a single DB field
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.dbTypeDropDownList">
            <summary>
            DropDownList for specifying the database column type.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathTextBox">
            <summary>
            TextBox control to get the XPath expression
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathRequiredFieldValidator">
            <summary>
            RequiredFieldValidator to ensure an XPath expression has been entered
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathCustomValidator">
            <summary>
            Server side validation of XPath expression, to ensure some nodes are returned
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.storageTypeRadioButtonList">
            <summary>
            Store an Xml fragment or a Csv
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.valueTypeDropDownList">
            <summary>
            Select Node IDs or Node Names as the values to store
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of XPathCheckBoxlistPreValueEditor
            </summary>
            <param name="dataType">XPathCheckBoxListDataType</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.XPathCustomValidator_ServerValidate(System.Object,System.Web.UI.WebControls.ServerValidateEventArgs)">
            <summary>
            Will run the entered XPath expression to ensure it's valid
            </summary>
            <param name="source">xPathCustomValidator</param>
            <param name="args"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:uComponents.DataTypes.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.Options">
            <summary>
            Gets the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="T:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor">
            <summary>
            XPath configurabale DropDownList Data Type
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.m_Data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.m_Options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.m_CustomValidator">
            <summary>
            Field for the CustomValidator.
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.m_DropDownList">
            <summary>
            Field for the DropDownList.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.#ctor(umbraco.interfaces.IData,uComponents.DataTypes.XPathDropDownList.XPathDropDownListOptions)">
            <summary>
            Initializes a new instance of XPathCheckBoxListDataEditor
            </summary>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.preValueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.dataEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance,
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListOptions.#ctor">
            <summary>
            Initializes an instance of XPathDropDownListOptions
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListOptions.XPath">
            <summary>
            XPath string used to get Nodes to be used as CheckBox options in a CheckBoxList
            </summary>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListOptions.UseId">
            <summary>
            Defaults to true, where property value is a csv of NodeIds, else if false, then csv of Node names is stored
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.xPathTextBox">
            <summary>
            TextBox control to get the XPath expression
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.xPathRequiredFieldValidator">
            <summary>
            RequiredFieldValidator to ensure an XPath expression has been entered
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.xPathCustomValidator">
            <summary>
            Server side validation of XPath expression, to ensure some nodes are returned
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.valueTypeDropDownList">
            <summary>
            Drop Down List to pick either Node Name or Node Id
            </summary>
        </member>
        <member name="F:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of XPathCheckBoxlistPreValueEditor
            </summary>
            <param name="dataType">XPathCheckBoxListDataType</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.XPathCustomValidator_ServerValidate(System.Object,System.Web.UI.WebControls.ServerValidateEventArgs)">
            <summary>
            Will run the entered XPath expression to ensure it returns at least 1 node
            </summary>
            <param name="source">xPathCustomValidator</param>
            <param name="args"></param>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:uComponents.DataTypes.XPathDropDownList.XPathDropDownListPreValueEditor.Options">
            <summary>
            Gets the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="T:uComponents.NotFoundHandlers.SearchFor404ContentHandler">
            <summary>
            A NotFoundHandler for finding the nearest 404 page.
            </summary>
        </member>
        <member name="F:uComponents.NotFoundHandlers.SearchFor404ContentHandler._redirectId">
            <summary>
            Field to store the redirect node Id.
            </summary>
        </member>
        <member name="M:uComponents.NotFoundHandlers.SearchFor404ContentHandler.Execute(System.String)">
            <summary>
            Executes the specified URL.
            </summary>
            <param name="url">The URL.</param>
            <returns>
            Returns whether the NotFoundHandler has a match.
            </returns>
        </member>
        <member name="M:uComponents.NotFoundHandlers.SearchFor404ContentHandler.CalculateMatchLength(System.String,System.String)">
            <summary>
            Calculate how much of the first part of string a matches with the first part of string b.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <returns>Returns the length of the match.</returns>
        </member>
        <member name="P:uComponents.NotFoundHandlers.SearchFor404ContentHandler.CacheUrl">
            <summary>
            Gets a value indicating whether [cache URL].
            </summary>
            <value><c>true</c> if [cache URL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uComponents.NotFoundHandlers.SearchFor404ContentHandler.redirectID">
            <summary>
            Gets the redirect ID.
            </summary>
            <value>The redirect ID.</value>
        </member>
        <member name="T:uComponents.Core.uQuery">
            <summary>
            Static helper methods, previously this class was UmbracoHelper
            </summary>
            <summary>
            Static helper methods, previously this class was UmbracoHelper
            </summary>
            <summary>
            Static helper methods, previously this class was UmbracoHelper
            </summary>
            <summary>
            uQuery sub-class for Documents
            </summary>
            <summary>
            uQuery sub-class for Media
            </summary>
            <summary>
            uQuery sub-class for Members
            </summary>
            <summary>
            uQuery sub-class for Nodes
            </summary>
            <summary>
            Static helper methods, previously this class was UmbracoHelper
            </summary>
            <summary>
            uQuery sub-class for Umbraco object types
            </summary>
        </member>
        <member name="M:uComponents.Core.uQuery.GetPublishedXml(uComponents.Core.uQuery.UmbracoObjectType)">
            <summary>
            Constructs the XML source from the cmsContentXml table used for Media and Members.
            </summary>
            <param name="umbracoObjectType">an UmbracoObjectType value</param>
            <returns>XML built from the cmsContentXml table</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.IsLegacyXmlSchema">
            <summary>
            Checks the Umbraco XML Schema version in use
            </summary>
            <returns>true if using the old XML schema, else false if using the new XML schema</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetCsvIds(System.String)">
            <summary>
            build a string array from a csv
            </summary>
            <param name="csv">string of comma seperated values</param>
            <returns>An array of node ids as string.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetXmlIds(System.String)">
            <summary>
            Gets Ids from known XML fragments (as saved by the MNTP / XPath CheckBoxList)
            </summary>
            <param name="xml">The Xml</param>
            <returns>An array of node ids as integer.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetIdFromQueryString">
            <summary>
            Gets an Id value from the QueryString
            </summary>
            <returns>an id as a string or string.empty</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ConvertToIntArray(System.String[])">
            <summary>
            Converts a string array into an integer array.
            </summary>
            <param name="items">The string array.</param>
            <returns>Returns an integer array.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GenerateXmlDocument(System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.List{System.Int32}},System.Collections.Generic.IDictionary{System.Int32,System.Xml.XmlNode},System.Int32,System.Xml.XmlNode)">
            <summary>
            Generates an XML document.
            </summary>
            <param name="hierarchy">The hierarchy.</param>
            <param name="nodeIndex">Index of the node.</param>
            <param name="parentId">The parent id.</param>
            <param name="parentNode">The parent node.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.GetAllDataTypes">
            <summary>
            Gets all datatypes sorted by a specified property name
            </summary>
            <returns>
            A sorted list of datatypes. Null if property name is wrong.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetAllDataTypes(System.Boolean)">
            <summary>
            Gets all datatypes sorted by a specified property name
            </summary>
            <param name="sortByName">if set to <c>true</c> [sort by name].</param>
            <returns>
            A sorted list of datatypes. Null if property name is wrong.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetBaseDataTypeGuid(System.Int32)">
            <summary>
            Gets the data type GUID.
            </summary>
            <param name="datatypeNodeId">The datatype node id.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDictionaryItem(System.String,System.String)">
            <summary>
            Gets a dictionary item if it exists. Otherwise returns the fallback string.
            </summary>
            <param name="key">The dictionary key.</param>
            <param name="fallback">The fallback.</param>
            <returns>
            A dictionary string or the fallback string
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDictionaryItem(System.String,System.String,System.Int32)">
            <summary>
            Gets the dictionary item for a specified language. Otherwise returns the fallback string.
            </summary>
            <param name="key">The dictionary key.</param>
            <param name="fallback">The fallback.</param>
            <param name="languageId">The language id.</param>
            <returns>
            Returns the value of a dictionary item from a language id, or the fallback string.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetContentIdByPropertyId(System.Int32)">
            <summary>
            Gets the <c>Content</c> Id by property Id.
            </summary>
            <param name="propertyId">The property id.</param>
            <returns>Returns the <c>Content</c> Id.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDocumentsByCsv(System.String)">
            <summary>
            Get collection of Document objects from the supplied CSV of IDs
            </summary>
            <param name="csv">string csv of IDs</param>
            <returns>collection or emtpy collection</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDocumentsByXml(System.String)">
            <summary>
            Gets the documents by XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetCurrentDocument">
            <summary>
            checks to see if the current node can be got via the nodeFactory, and then constructed as a Document, if not then
            checks to see if there's an id parameter on the QueryString to construct a Document
            </summary>
            <returns>the current Document or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDocument(System.String)">
            <summary>
            Get document from an ID
            </summary>
            <param name="documentId">string ID of document to get</param>
            <returns>Document or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetDocument(System.Int32)">
            <summary>
            Get media item from an ID
            </summary>
            <param name="id">ID of media item to get</param>
            <returns>Media or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.IsDocumentPublished(System.String)">
            <summary>
            Determines whether the specified Document is published.
            </summary>
            <param name="id">The Document's id.</param>
            <returns>
            	<c>true</c> if the specified id is published; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ToNameIds(System.Collections.Generic.List{umbraco.cms.businesslogic.web.Document})">
            <summary>
            Extension method on Document collection to return key value pairs of: Id / Text
            </summary>
            <param name="documents">generic list of Document objects</param>
            <returns>a collection of document IDs and their text fields</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMediaByXPath(System.String)">
            <summary>
            Get a collection of media items from an XPath expression (note XML source is currently a flat structure)
            </summary>
            <param name="xPath">XPath expression</param>
            <returns>collection or empty collection</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMediaByCsv(System.String)">
            <summary>
            Get collection of media objects from the supplied CSV of IDs
            </summary>
            <param name="csv">string csv of IDs</param>
            <returns>collection or emtpy collection</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMediaByXml(System.String)">
            <summary>
            Gets the media by XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMediaByName(System.String)">
            <summary>
            Get Media by name
            </summary>
            <param name="name">name of node to look for</param>
            <returns>list of nodes, or empty list</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMediaByType(System.String)">
            <summary>
            Get Media by media type alias
            </summary>
            <param name="mediaTypeAlias">The media type alias</param>
            <returns>list of media, or empty list</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMedia(System.String)">
            <summary>
            Get media item from an ID
            </summary>
            <param name="mediaId">string ID of media item to get</param>
            <returns>media or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMedia(System.Int32)">
            <summary>
            Get media item from an ID
            </summary>
            <param name="id">ID of media item to get</param>
            <returns>Media or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ToNameIds(System.Collections.Generic.List{umbraco.cms.businesslogic.media.Media})">
            <summary>
            Extension method on Media collection to return key value pairs of: media.Id / media.Text
            </summary>
            <param name="media">generic list of Media objects</param>
            <returns>a collection of mediaIDs and their text fields</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMembersByXPath(System.String)">
            <summary>
            Get a collection of members from an XPath expression (note XML source is currently a flat structure)
            </summary>
            <param name="xPath">XPath expression</param>
            <returns>collection or empty collection</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMembersByCsv(System.String)">
            <summary>
            Get collection of member objects from the supplied CSV of IDs
            </summary>
            <param name="csv">string csv of IDs</param>
            <returns>collection or emtpy collection</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMembersByXml(System.String)">
            <summary>
            Gets the members by XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMembersByType(System.String)">
            <summary>
            Get Members by member type alias
            </summary>
            <param name="memberTypeAlias">The member type alias</param>
            <returns>list of members, or empty list</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMember(System.String)">
            <summary>
            Get member from an ID
            </summary>
            <param name="memberId">string representation of an umbraco.cms.businesslogic.member.Member object Id</param>
            <returns>member or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetMember(System.Int32)">
            <summary>
            Get member from an ID
            </summary>
            <param name="id">ID of member item to get</param>
            <returns>member or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ToNameIds(System.Collections.Generic.List{umbraco.cms.businesslogic.member.Member})">
            <summary>
            Extension method on Member collection to return key value pairs of: member.Id / member.loginName
            </summary>
            <param name="members">generic list of Member objects</param>
            <returns>a collection of memberIDs and their login names</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.AddMemberToGroup(System.Int32,System.Int32)">
            <summary>
            Adds the member to group.
            </summary>
            <param name="memberId">The member id.</param>
            <param name="groupId">The group id.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.AddMembersToGroup(System.Int32[],System.Int32)">
            <summary>
            Adds the members to group.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupId">The group id.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.AddMembersToGroups(System.Int32[],System.Int32[])">
            <summary>
            Adds the members to groups.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupIds">The group ids.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.AddMembersToGroups(System.Int32[],System.String[])">
            <summary>
            Adds the members to groups.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupNames">The group names.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.RemoveMemberFromGroup(System.Int32,System.Int32)">
            <summary>
            Removes the member from group.
            </summary>
            <param name="memberId">The member id.</param>
            <param name="groupId">The group id.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.RemoveMembersFromGroup(System.Int32[],System.Int32)">
            <summary>
            Removes the members from group.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupId">The group id.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.RemoveMembersFromGroups(System.Int32[],System.Int32[])">
            <summary>
            Removes the members from groups.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupIds">The group ids.</param>
        </member>
        <member name="M:uComponents.Core.uQuery.RemoveMembersFromGroups(System.Int32[],System.String[])">
            <summary>
            Removes the members from groups.
            </summary>
            <param name="memberIds">The member ids.</param>
            <param name="groupNames">The group names.</param>
        </member>
        <member name="F:uComponents.Core.uQuery.RootNodeId">
            <summary>
            Gets the Root Node Id (-1)
            </summary>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByXPath(System.String)">
            <summary>
            Get a collection of Umbraco Nodes from an XPath expression
            </summary>
            <param name="xpath">XPath expression to get Nodes, can use $ancestorOrSelf which will use the current Node if published, else it'll use the nearest published parent
            $currentPage will be depreciated</param>
            <returns>an empty collection or a collection of nodes</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByXPathViaSql(System.String)">
            <summary>
            The umbraco.content.Instance.XmlContent method from VB.NET causes an ambiguous issue,
            so this method can gets the source xml directly from the DB
            WARNING: xml is flat - every node in the content tree is a sibling
            </summary>
            <param name="xPath"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByCsv(System.String)">
            <summary>
            Returns a collection of Nodes, from a delimited list of Ids (as per the format used with UltimatePicker)
            </summary>
            <param name="csv">string csv of Ids</param>
            <returns>an empty collection or a collection or Nodes</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByXml(System.String)">
            <summary>
            Builds a node collection from an XML snippet
            </summary>
            <param name="xml">
            the expected Xml snippet is that stored by the Multi-Node Tree Picker (and XPathCheckBoxList when storing Ids)
            "<MultiNodePicker>
                <nodeId>1065</nodeId>
                <nodeId>1068</nodeId>
                <nodeId>1066</nodeId>
             </MultiNodePicker>"
            </param>
            <returns>an empty list or a list of nodes</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByName(System.String)">
            <summary>
            Get nodes by name
            </summary>
            <param name="name">name of node to look for</param>
            <returns>list of nodes, or empty list</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByType(System.String)">
            <summary>
            Get nodes by document type alias
            </summary>
            <param name="documentTypeAlias">The document type alias</param>
            <returns>list of nodes, or empty list</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodesByType(System.Int32)">
            <summary>
            Get nodes by document type id
            </summary>
            <param name="documentTypeId">The document type id.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNodeByUrl(System.String)">
            <summary>
            Gets the node by URL.
            </summary>
            <param name="url">url to search for</param>
            <returns>null or node matching supplied url</returns>
            <remarks>Uses <c>uComponents.Core.XsltExtensions.Nodes.GetNodeIdByUrl</c></remarks>
        </member>
        <member name="M:uComponents.Core.uQuery.GetRootNode">
            <summary>
            Get top level content node
            </summary>
            <returns>the top level content node</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetCurrentNode">
            <summary>
            checks to see if the current node can be got via the nodeFactory, if not then 
            checks to see if the current node can be got via an id on the QueryString
            </summary>
            <returns>the current node or null if not found</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNode(System.String)">
            <summary>
            Checks the supplied string can be cast to an integer, and returns the node with that Id
            </summary>
            <param name="nodeId">string representing the nodeId to return</param>
            <returns>Node or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetNode(System.Int32)">
            <summary>
            Wrapper for Node constructor
            </summary>
            <param name="id">id of Node to get</param>
            <returns>Node or null</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ResolveXPath(System.String)">
            <summary>
            Resolves the XPath expression with any Umbraco-specific parameters.
            </summary>
            <param name="xpath">The xpath expression.</param>
            <returns>Returns an XPath expression with the Umbraco-specific parameters resolved.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ToNameIds(System.Collections.Generic.List{umbraco.NodeFactory.Node})">
            <summary>
            Extension method on Node collection to return key value pairs of: node.Id / node.Name
            </summary>
            <param name="nodes">generic list of node objects</param>
            <returns>a collection of nodeIDs and their names</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.MakeNewPreValue(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Makes a new PreValue.
            </summary>
            <param name="dataTypeDefinitionId">The datatype definition id.</param>
            <param name="value">The value.</param>
            <param name="alias">The alias.</param>
            <param name="sortOrder">The sort order.</param>
            <returns>
            The inserted prevalue or null if the operation failed.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetPreValues(System.Int32)">
            <summary>
            Gets the prevalues for a specified datatype as a strongly typed list.
            </summary>
            <param name="dataTypeDefinitionId">The datatype definition id.</param>
            <returns>The list of PreValues.</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetPreValues(System.Int32,System.String)">
            <summary>
            Gets the pre values.
            TODO: [OA] Document on `ucomponents.org`
            </summary>
            <param name="nodeId">The node id.</param>
            <param name="propertyAlias">The property alias.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.ReorderPreValue(System.Int32,System.Int32)">
            <summary>
            Reorders the prevalue.
            </summary>
            <param name="preValueId">The prevalue id.</param>
            <param name="sortOrder">The sort order.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetUmbracoObjectType(System.String)">
            <summary>
            Get an UmbracoObjectType value from it's name
            </summary>
            <param name="name">Enum value name</param>
            <returns>an UmbracoObjectType Enum value</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetUmbracoObjectType(System.Guid)">
            <summary>
            Get an instance of an Umbraco Object Type enum value from it's GUID
            </summary>
            <param name="guid">Enum value GUID</param>
            <returns>an UmbracoObjectType Enum value</returns>
        </member>
        <member name="M:uComponents.Core.uQuery.GetUmbracoObjectType(System.Int32)">
            <summary>
            Get an UmbracoObjectType value from an id in umbracoNode table
            </summary>
            <param name="id">id to search for</param>
            <returns>an UmbracoObjectType Enum value</returns>
        </member>
        <member name="P:uComponents.Core.uQuery.SqlHelper">
            <summary>
            Gets the SqlHelper used by Umbraco
            </summary>
        </member>
        <member name="T:uComponents.Core.uQuery.UmbracoObjectType">
            <summary>
            Enum used to represent the Umbraco Object Types and thier associated GUIDs
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Unknown">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.ContentItemType">
            <summary>
            Content Item Type
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.ROOT">
            <summary>
            Root
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Media">
            <summary>
            Media
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.MemberType">
            <summary>
            Member Type
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Template">
            <summary>
            Template
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.MemberGroup">
            <summary>
            Member Group
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.ContentItem">
            <summary>
            Content Item
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.MediaType">
            <summary>
            "Media Type
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.DocumentType">
            <summary>
            Document Type
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.RecycleBin">
            <summary>
            Recycle Bin
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Stylesheet">
            <summary>
            Stylesheet
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.Member">
            <summary>
            Member
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.UmbracoObjectType.DataType">
            <summary>
            Data Type
            </summary>
        </member>
        <member name="T:uComponents.Core.uQuery.GuidAttribute">
            <summary>
            Attribute to associate a GUID string with an UmbracoObjectType Enum value
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.GuidAttribute.guid">
            <summary>
            string representation of a Guid
            </summary>
        </member>
        <member name="M:uComponents.Core.uQuery.GuidAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GuidAttribute class
            Sets the guid value as a string
            </summary>
            <param name="guid">a string representation of a Guid from the enum attribute</param>
        </member>
        <member name="M:uComponents.Core.uQuery.GuidAttribute.ToString">
            <summary>
            Gets the guid as a string
            </summary>
            <returns>string of guid</returns>
        </member>
        <member name="T:uComponents.Core.uQuery.FriendlyNameAttribute">
            <summary>
            Attribute to add a Friendly Name string with an UmbracoObjectType enum value
            </summary>
        </member>
        <member name="F:uComponents.Core.uQuery.FriendlyNameAttribute.friendlyName">
            <summary>
            friendly name value
            </summary>
        </member>
        <member name="M:uComponents.Core.uQuery.FriendlyNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FriendlyNameAttribute class
            Sets the friendly name value
            </summary>
            <param name="friendlyName">attribute value</param>
        </member>
        <member name="M:uComponents.Core.uQuery.FriendlyNameAttribute.ToString">
            <summary>
            Gets the friendly name
            </summary>
            <returns>string of friendly name</returns>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.ContentExtensions">
            <summary>
            uQuery extensions for the Content object
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.HasProperty(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Determines whether the specified content item has property.
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">The property alias.</param>
            <returns>
            	<c>true</c> if the specified content item has property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetProperty``1(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Get a value (of specified type) from a content item's property.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="item">The content item.</param>
            <param name="propertyAlias">alias of property to get</param>
            <returns>default(T) or property value cast to (T)</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetPropertyAsString(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Get a string value from a content item's property.
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>
            empty string, or property value as string
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetPropertyAsBoolean(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Get a boolean value from a content item's property, (works with built in Yes/No dataype).
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>
            true if can cast value, else false for all other circumstances
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetPropertyAsDateTime(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Get a DateTime value from a content item's property.
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>
            DateTime value or DateTime.MinValue for all other circumstances
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetPropertyAsInt(umbraco.cms.businesslogic.Content,System.String)">
            <summary>
            Get an int value from a content item's property.
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>
            int value of property or int.MinValue for all other circumstances
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetRandom``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Gets the random content item.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="items">The content items.</param>
            <returns>
            Returns a random content item from a collection of content items.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.GetRandom``1(System.Collections.Generic.ICollection{``0},System.Int32)">
            <summary>
            Gets a collection of random content items.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="items">The content items.</param>
            <param name="numberOfItems">The number of items.</param>
            <returns>
            Returns the specified number of random content items from a collection of content items.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.RandomOrder``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Randomizes the order of the content items.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="items">The content items.</param>
            <returns>Returns a list of content items in a random order.</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.ContentExtensions.SetProperty(umbraco.cms.businesslogic.Content,System.String,System.Object)">
            <summary>
            Sets a property value, and returns self.
            </summary>
            <param name="item">The content item.</param>
            <param name="propertyAlias">The alias of property to set.</param>
            <param name="value">The value to set.</param>
            <returns>
            The same content item on which this is an extension method.
            </returns>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.DocumentExtensions">
            <summary>
            uQuery extensions for the Document object
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetAncestorByPathLevel(umbraco.cms.businesslogic.web.Document,System.Int32)">
            <summary>
            Gets the ancestor by path level.
            </summary>
            <param name="document">an <c>umbraco.cms.businesslogic.web.Document</c> object.</param>
            <param name="level">The level.</param>
            <returns>Returns an ancestor document by path level.</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetAncestorDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'ancestor'
            </summary>
            <param name="document">an <c>umbraco.cms.businesslogic.web.Document</c> object.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetAncestorOrSelfDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'ancestor-or-self'
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetPrecedingSiblingDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'preceding-sibling'
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetFollowingSiblingDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'following-sibling'
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetSiblingDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Gets all sibling Documents
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetDescendantOrSelfDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'descendant-or-self'
            </summary>
            <param name="document">The document.</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetDescendantDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'descendant'
            Make the All Descendants LINQ queryable
            taken from: http://our.umbraco.org/wiki/how-tos/useful-helper-extension-methods-%28linq-null-safe-access%29
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetDescendantDocuments(umbraco.cms.businesslogic.web.Document,System.Func{umbraco.cms.businesslogic.web.Document,System.Boolean})">
            <summary>
            Drills down into the descendant documents returning those where Func is true, when Func is false further descendants are not checked
            taken from: http://ucomponents.codeplex.com/discussions/246406
            </summary>
            <param name="document">The <c>umbraco.cms.businesslogic.web.Document</c>.</param>
            <param name="func">The func</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetDescendantDocumentsByType(umbraco.cms.businesslogic.web.Document,System.String)">
            <summary>
            Gets the descendant documents by document-type.
            </summary>
            <param name="document">The <c>umbraco.cms.businesslogic.web.Document</c>.</param>
            <param name="documentTypeAlias">The document type alias.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetChildDocuments(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Functionally similar to the XPath axis 'child'
            Make the imediate Children LINQ queryable
            Performance optimised for just imediate children.
            taken from: http://our.umbraco.org/wiki/how-tos/useful-helper-extension-methods-%28linq-null-safe-access%29
            </summary>
            <param name="document">The document.</param>
            <returns>Documents as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetChildDocuments(umbraco.cms.businesslogic.web.Document,System.Func{umbraco.cms.businesslogic.web.Document,System.Boolean})">
            <summary>
            Gets the child documents.
            </summary>
            <param name="document">The <c>umbraco.cms.businesslogic.web.Document</c>.</param>
            <param name="func">The func.</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetChildDocumentsByType(umbraco.cms.businesslogic.web.Document,System.String)">
            <summary>
            Gets the child documents by document-type.
            </summary>
            <param name="document">The <c>umbraco.cms.businesslogic.web.Document</c>.</param>
            <param name="documentTypeAlias">The document type alias.</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.GetChildDocumentByName(umbraco.cms.businesslogic.web.Document,System.String)">
            <summary>
            Extension method on Document to retun a matching child document by name
            </summary>
            <param name="document">The <c>umbraco.cms.businesslogic.web.Document</c>.</param>
            <param name="documentName">name of node to search for</param>
            <returns>null or Node</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.Publish(umbraco.cms.businesslogic.web.Document,System.Boolean)">
            <summary>
            Publishes this document
            </summary>
            <param name="document">an umbraco.cms.businesslogic.web.Document object</param>
            <param name="useAdminUser">if true then publishes under the context of User(0), if false uses current user</param>
            <returns>the same document object on which this is an extension method</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.DocumentExtensions.ToNode(umbraco.cms.businesslogic.web.Document)">
            <summary>
            Returns a node representation of the document (if it exists)
            </summary>
            <param name="document">The document.</param>
            <returns>Node for the document (if it's published)</returns>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.MediaExtensions">
            <summary>
            Extension methods for umbraco.cms.businesslogic.media.Media
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetAncestorMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Functionally similar to the XPath axis 'ancestor'
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetAncestorOrSelfMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Funtionally similar to the XPath axis 'ancestor-or-self'
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetSiblingMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Gets all sibling Media
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetDescendantOrSelfMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Functionally similar to the XPath axis 'descendant-or-self'
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetDescendantMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Functionally similar to the XPath axis 'descendant'
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetChildMedia(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Functionally similar to the XPath axis 'child'
            Performance optimised for just imediate children.
            </summary>
            <param name="media">The <c>umbraco.cms.businesslogic.media.Media</c> object.</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetChildMedia(umbraco.cms.businesslogic.media.Media,System.Func{umbraco.cms.businesslogic.media.Media,System.Boolean})">
            <summary>
            Gets the child media that satisfy the <c>Func</c> condition.
            </summary>
            <param name="media">The <c>umbraco.cms.businesslogic.media.Media</c> object.</param>
            <param name="func">The func.</param>
            <returns>Media nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetDepth(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Extension method on Meia obj to get it's depth
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns>an int representing the depth of the Media object in the tree</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.Level(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Tell me the level of this node (0 = root)
            updated from Depth and changed to start at 0
            to align with other 'Level' methods (eg xslt)
            </summary>
            <param name="media"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetImageCropperUrl(umbraco.cms.businesslogic.media.Media,System.String,System.String)">
            <summary>
            Returns the url for a given crop name using the built in Image Cropper datatype
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <param name="propertyAlias">property alias</param>
            <param name="cropName">name of crop to get url for</param>
            <returns>emtpy string or url</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetImageUrl(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Gets the image URL.
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MediaExtensions.GetImageThumbnailUrl(umbraco.cms.businesslogic.media.Media)">
            <summary>
            Gets the image thumbnail URL.
            </summary>
            <param name="media">an umbraco.cms.businesslogic.media.Media object</param>
            <returns></returns>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.MemberExtensions">
            <summary>
            uQuery Member extensions.
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.AddGroup(umbraco.cms.businesslogic.member.Member,System.String)">
            <summary>
            Adds a member the group (by group name).
            </summary>
            <param name="member">The member.</param>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.AddGroup(umbraco.cms.businesslogic.member.Member,umbraco.cms.businesslogic.member.MemberGroup)">
            <summary>
            Adds a member the group.
            </summary>
            <param name="member">The member.</param>
            <param name="group">The group.</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.IsInGroup(umbraco.cms.businesslogic.member.Member,System.Int32)">
            <summary>
            Determines whether [is in group] [the specified member].
            </summary>
            <param name="member">The member.</param>
            <param name="groupId">The group id.</param>
            <returns>
            	<c>true</c> if [is in group] [the specified member]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.IsInGroup(umbraco.cms.businesslogic.member.Member,System.String)">
            <summary>
            Determines whether [is in group] [the specified member].
            </summary>
            <param name="member">The member.</param>
            <param name="groupName">Name of the group.</param>
            <returns>
            	<c>true</c> if [is in group] [the specified member]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.IsInGroup(umbraco.cms.businesslogic.member.Member,umbraco.cms.businesslogic.member.MemberGroup)">
            <summary>
            Determines whether [is in group] [the specified member].
            </summary>
            <param name="member">The member.</param>
            <param name="group">The group.</param>
            <returns>
            	<c>true</c> if [is in group] [the specified member]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.RemoveGroup(umbraco.cms.businesslogic.member.Member,System.String)">
            <summary>
            Removes a member the group (by group name).
            </summary>
            <param name="member">The member.</param>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.MemberExtensions.RemoveGroup(umbraco.cms.businesslogic.member.Member,umbraco.cms.businesslogic.member.MemberGroup)">
            <summary>
            Removes a member the group.
            </summary>
            <param name="member">The member.</param>
            <param name="group">The group.</param>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.NodeExtensions">
            <summary>
            uQuery extensions for the Node object.
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetAncestorByPathLevel(umbraco.NodeFactory.Node,System.Int32)">
            <summary>
            Gets the ancestor by path level.
            </summary>
            <param name="node">The node.</param>
            <param name="level">The level.</param>
            <returns>Returns an ancestor node by path level.</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetAncestorNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'ancestor'
            Get the Ancestor Nodes from current to root, (useful for breadcrumbs)
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetAncestorOrSelfNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'ancestor-or-self'
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetPrecedingSiblingNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'preceding-sibling'
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFollowingSiblingNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'following-sibling'
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetSiblingNodes(umbraco.NodeFactory.Node)">
            <summary>
            Gets all sibling Nodes
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetDescendantOrSelfNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'descendant-or-self'
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetDescendantNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'descendant'
            Make the All Descendants LINQ queryable
            taken from: http://our.umbraco.org/wiki/how-tos/useful-helper-extension-methods-%28linq-null-safe-access%29
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetDescendantNodes(umbraco.NodeFactory.Node,System.Func{umbraco.NodeFactory.Node,System.Boolean})">
            <summary>
            Drills down into the descendant nodes returning those where Func is true, when Func is false further descendants are not checked
            taken from: http://ucomponents.codeplex.com/discussions/246406
            </summary>
            <param name="node">The <c>umbraco.presentation.nodeFactory.Node</c>.</param>
            <param name="func">The func</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetDescendantNodesByType(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Gets the descendant nodes by document-type.
            Get all descendants, and then return only those that match the requested typeAlias
            </summary>
            <param name="node">The <c>umbraco.presentation.nodeFactory.Node</c>.</param>
            <param name="documentTypeAlias">The document type alias.</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetChildNodes(umbraco.NodeFactory.Node)">
            <summary>
            Functionally similar to the XPath axis 'child'
            Make the imediate Children LINQ queryable
            Performance optimised for just imediate children.
            taken from: http://our.umbraco.org/wiki/how-tos/useful-helper-extension-methods-%28linq-null-safe-access%29
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>Node as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetChildNodes(umbraco.NodeFactory.Node,System.Func{umbraco.NodeFactory.Node,System.Boolean})">
            <summary>
            Gets the child nodes.
            </summary>
            <param name="node">The <c>umbraco.presentation.nodeFactory.Node</c>.</param>
            <param name="func">The func.</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetChildNodesByType(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Gets the child nodes by document-type.
            </summary>
            <param name="node">The <c>umbraco.presentation.nodeFactory.Node</c>.</param>
            <param name="documentTypeAlias">The document type alias.</param>
            <returns>Nodes as IEnumerable</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetChildNodeByName(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Extension method on Node to retun a matching child node by name
            </summary>
            <param name="parentNode">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="nodeName">name of node to search for</param>
            <returns>null or Node</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.HasProperty(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Determines whether the specified node has property.
            </summary>
            <param name="node">The node.</param>
            <param name="propertyAlias">The property alias.</param>
            <returns>
              <c>true</c> if the specified node has property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetProperty``1(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Get a value of type T from a property
            </summary>
            <typeparam name="T">type T to cast to</typeparam>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of property to get</param>
            <returns>default(T) or property cast to (T)</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetPropertyAsString(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Get a string value for the supplied property alias
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>empty string, or property value as string</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetPropertyAsBoolean(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Get a boolean value for the supplied property alias (works with built in Yes/No dataype)
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>true if can cast value, else false for all other circumstances</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetPropertyAsDateTime(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Get a DateTime value for the supplied property alias
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>DateTime value or DateTime.MinValue for all other circumstances</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetPropertyAsInt(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Get an int value for the supplied property alias
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of propety to get</param>
            <returns>int value of property or int.MinValue for all other circumstances</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetDepth(umbraco.NodeFactory.Node)">
            <summary>
            Extension method on Node obj to get it's depth
            taken from: http://our.umbraco.org/wiki/how-tos/useful-helper-extension-methods-%28linq-null-safe-access%29
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <returns>int for depth, starts at 1</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.Level(umbraco.NodeFactory.Node)">
            <summary>
            Tell me the level of this node (0 = root)
            updated from Depth and changed to start at 0
            to align with other 'Level' methods (eg xslt)
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.ToXml(umbraco.NodeFactory.Node)">
            <summary>
            Gets the XML for the Node.
            </summary>
            <param name="node">The node.</param>
            <returns>Returns an <c>XmlNode</c> for the selected Node</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetImageCropperUrl(umbraco.NodeFactory.Node,System.String,System.String)">
            <summary>
            Returns the url for a given crop name using the built in Image Cropper datatype
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">property alias</param>
            <param name="cropName">name of crop to get url for</param>
            <returns>emtpy string or url</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.SetProperty(umbraco.NodeFactory.Node,System.String,System.Object)">
            <summary>
            Sets a property value on this node
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="propertyAlias">alias of property to set</param>
            <param name="value">value to set</param>
            <returns>the same node object on which this is an extension method</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.Publish(umbraco.NodeFactory.Node,System.Boolean)">
            <summary>
            Republishes this node
            </summary>
            <param name="node">an umbraco.presentation.nodeFactory.Node object</param>
            <param name="useAdminUser">if true then publishes under the context of User(0), if false uses current user</param>
            <returns>the same node object on which this is an extension method</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetRandom(System.Collections.Generic.IList{umbraco.NodeFactory.Node})">
            <summary>
            Gets a random node.
            </summary>
            <param name="nodes">The nodes.</param>
            <returns>
            Returns a random node from a collection of nodes.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetRandom(System.Collections.Generic.IList{umbraco.NodeFactory.Node},System.Int32)">
            <summary>
            Gets a collection of random nodes.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="numberOfItems">The number of items.</param>
            <returns>
            Returns the specified number of random nodes from a collection of nodes.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFullNiceUrl(umbraco.NodeFactory.Node)">
            <summary>
            Gets the full nice URL.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFullNiceUrl(umbraco.NodeFactory.Node,System.String)">
            <summary>
            Gets the full nice URL.
            </summary>
            <param name="node">The node.</param>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFullNiceUrl(umbraco.NodeFactory.Node,System.String,System.Boolean)">
            <summary>
            Gets the full nice URL.
            </summary>
            <param name="node">The node.</param>
            <param name="language">The language.</param>
            <param name="ssl">if set to <c>true</c> [SSL].</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFullNiceUrl(umbraco.NodeFactory.Node,umbraco.cms.businesslogic.web.Domain)">
            <summary>
            Gets the full nice URL.
            </summary>
            <param name="node">The node.</param>
            <param name="domain">The domain.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.GetFullNiceUrl(umbraco.NodeFactory.Node,umbraco.cms.businesslogic.web.Domain,System.Boolean)">
            <summary>
            Gets the full nice URL.
            </summary>
            <param name="node">The node.</param>
            <param name="domain">The domain.</param>
            <param name="ssl">if set to <c>true</c> [SSL].</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.IsHiddenFromNavigation(umbraco.NodeFactory.Node)">
            <summary>
            Determines whether [the specified node] [is hidden from navigation].
            </summary>
            <param name="node">The node.</param>
            <returns>
              <c>true</c> if [the specified node] [is hidden from navigation]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.ToINodes(System.Collections.Generic.IEnumerable{umbraco.presentation.nodeFactory.Node})">
            <summary>
            Converts legacy nodeFactory collection to INode collection
            </summary>
            <param name="nodes">The legacy nodeFactory nodes.</param>
            <returns>Returns the legacy nodeFactory nodes as INode nodes.</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.ToLegacyNodes(System.Collections.Generic.IEnumerable{umbraco.NodeFactory.Node})">
            <summary>
            Converts INode collection to legacy nodeFactory collection
            </summary>
            <param name="nodes">The nodes.</param>
            <returns>Returns the nodes as legacy nodeFactory nodes.</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.ToDynamicNode(umbraco.NodeFactory.Node)">
            <summary>
            Converts a Node to a DynamicNode.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.NodeExtensions.ToDynamicNodeList(System.Collections.Generic.IEnumerable{umbraco.NodeFactory.Node})">
            <summary>
            Converts a list of Nodes to a list of DynamicNodes.
            </summary>
            <param name="nodes">The nodes.</param>
            <returns></returns>
            <remarks>Should this extension method be moved to another file for groups of nodes?</remarks>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.PreValueExtensions">
            <summary>
            uQuery extensions for the PreValue object.
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.PreValueExtensions.GetAlias(umbraco.cms.businesslogic.datatype.PreValue)">
            <summary>
            Gets the alias of the specified PreValue
            </summary>
            <param name="preValue">The PreValue.</param>
            <returns>The alias</returns>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.RelationTypeExtensions">
            <summary>
            uQuery extensions for the RelationType object.
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.GetParentUmbracoObjectType(umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            Extension method to return the Parent UmbracoObjectType
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <returns>an UmbracoObjectType value</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.GetChildUmbracoObjectType(umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            Extension method to return the Child UmbracoObjectType
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <returns>an UmbracoObjectType value</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.CreateRelation(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32)">
            <summary>
            Creates a new relation for this relation type - also performs objectype validation
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="parentId">parentId of relation</param>
            <param name="childId">child Id of relation</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.HasRelations(umbraco.cms.businesslogic.relation.RelationType,System.Int32)">
            <summary>
            Determines whether the specified id exists as a relation for the current relation type
            </summary>
            <param name="relationType">Type of the relation.</param>
            <param name="id">The id.</param>
            <returns>
              <c>true</c> if the specified relation type has relations; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.IsRelated(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32)">
            <summary>
            Wrapper for Relation.IsRelated(int, int, RelationType)
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="parentId">parentId to test</param>
            <param name="childId">childId to test</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.GetRelation(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32)">
            <summary>
            Extension method to get a relation from it's parent and child Ids
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="parentId">parentId of relation</param>
            <param name="childId">child Id of relation</param>
            <returns>null or the Relation matching supplied parentId and childId</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.GetRelations(umbraco.cms.businesslogic.relation.RelationType,System.Int32)">
            <summary>
            Gets the relations for the supplied id (wrapper for Relation.GetRelations)
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="id">the id</param>
            <returns>relations for the id</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.DeleteRelation(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32)">
            <summary>
            Extension method to delete a relation, found by it's parent and child Ids
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="parentId">parent id of relation to delete</param>
            <param name="childId">child id of relation to delte</param>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.RelationTypeExtensions.ClearRelations(umbraco.cms.businesslogic.relation.RelationType,System.Int32)">
            <summary>
            Wipes all relations associated with the id supplied in this relation type
            </summary>
            <param name="relationType">an instance of umbraco.cms.businesslogic.relation.RelationType</param>
            <param name="id">key id to wipe</param>
        </member>
        <member name="T:uComponents.Core.uQueryExtensions.UmbracoObjectTypeExtensions">
            <summary>
            uQuery extensions for Umbraco object types.
            </summary>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.UmbracoObjectTypeExtensions.GetGuid(uComponents.Core.uQuery.UmbracoObjectType)">
            <summary>
            Extension method for the UmbracoObjectType enum to return the enum GUID
            </summary>
            <param name="umbracoObjectType">UmbracoObjectType Enum value</param>
            <returns>a GUID value of the UmbracoObjectType</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.UmbracoObjectTypeExtensions.GetName(uComponents.Core.uQuery.UmbracoObjectType)">
            <summary>
            Extension method for the UmbracoObjectType enum to return the enum name
            </summary>
            <param name="umbracoObjectType">UmbracoObjectType value</param>
            <returns>The enum name of the UmbracoObjectType value</returns>
        </member>
        <member name="M:uComponents.Core.uQueryExtensions.UmbracoObjectTypeExtensions.GetFriendlyName(uComponents.Core.uQuery.UmbracoObjectType)">
            <summary>
            Extension method for the UmbracoObejctType enum to return the enum friendly name
            </summary>
            <param name="umbracoObjectType">UmbracoObjectType value</param>
            <returns>a string of the FriendlyName</returns>
        </member>
    </members>
</doc>
